name: Analyse SonarQube Latest

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    services:
      azuresql:
        image: mcr.microsoft.com/azure-sql-edge
        ports:
          - 1433:1433
        env:
          ACCEPT_EULA: 1
          MSSQL_SA_PASSWORD: ${{ secrets.TEST_META_PASSWORD }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'

      - name: Download and extract dotCover CLI
        run: |
          curl -L -o dotcover.tar.gz "https://download.jetbrains.com/resharper/dotUltimate.2025.1.2/JetBrains.dotCover.CommandLineTools.2025.1.2.tar.gz"
          mkdir dotcover
          tar -xzf dotcover.tar.gz -C dotcover

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Start SonarScanner
        run: |
          dotnet sonarscanner begin \
            /k:"ballware_ballware-meta-service" \
            /o:"ballware" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.dotcover.reportsPaths="coverage.dcvr"

      - name: Build solution
        run: dotnet build ballware-meta-service.sln --no-incremental --configuration Release

      - name: Run coverage for all test projects
        run: |
          mkdir -p coverage
          i=0
          find ./test -name '*.Tests.csproj' | while read project; do
            echo "Running coverage for: $project"
            dotnet dotcover/dotCover.dll cover \
              --targetExecutable="/usr/bin/dotnet" \
              --targetArguments="test $project --configuration Release --logger trx" \
              --output="coverage/project_$i.dcvr" \
              --returnTargetExitCode
            ((i=i+1))
          done

      - name: Merge coverage snapshots
        run: |
          snapshots=$(find coverage -name '*.dcvr' | paste -sd ';' -)
          dotnet dotcover/dotCover.dll merge \
            --source="$snapshots" \
            --output="coverage.dcvr"
      - name: End SonarScanner
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
