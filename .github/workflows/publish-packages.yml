name: Publish packages and images
on:
  push:
    branches:
      - main
      - develop

jobs:
  build_and_pack:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/dotnet/sdk:8.0        
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0      
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: '6.3.x'          
      - name: Ensure tool manifest exists & install local tools
        run: |
          dotnet new tool-manifest || true
          dotnet tool update Swashbuckle.AspNetCore.Cli --version 8.1.4
          dotnet tool update Nswag.ConsoleCore
      - name: Fetch GitVersion
        uses: gittools/actions/gitversion/execute@v4.1.0
      - name: Restore dependencies
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/ballware/index.json" \
            --name github \
            --username frankball \
            --password "$GITHUB_TOKEN" \
            --store-password-in-clear-text
          dotnet restore ballware-meta-service.sln
      - name: Build solution
        run: |
          dotnet build ballware-meta-service.sln -p:Version=${{ env.GitVersion_SemVer }} --configuration Release   
      - name: Generate Swagger specification
        working-directory: src/Ballware.Meta.Service
        env:
          ASPNETCORE_ENVIRONMENT: Swagger
        run: |
          dotnet tool run swagger tofile \
            --output ../Ballware.Meta.Service.Client/swagger.json \
            ./bin/Release/net8.0/Ballware.Meta.Service.dll \
            service
      - name: Generate service client code
        working-directory: src/Ballware.Meta.Service.Client
        run: |
          dotnet tool run nswag run nswag.json          
      - name: Pack NuGet packages
        run: |
          dotnet restore ballware-meta-service.sln
          dotnet pack ballware-meta-service.sln -p:Version=${{ env.GitVersion_SemVer }} --configuration Release --output ./nupkgs
      - name: Publish NuGet packages to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet nuget push ./nupkgs/*.nupkg --source https://nuget.pkg.github.com/ballware/index.json --api-key "$GITHUB_TOKEN" --skip-duplicate
      - name: Create version tag on release
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ env.GitVersion_SemVer }}
          git push origin refs/tags/v${{ env.GitVersion_SemVer }} refs/heads/main
  docker_publish:          
    needs: build_and_pack
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables for Docker tags
        run: |
          echo "DOCKER_TAG=${{ needs.build_and_pack.outputs.GitVersion_SemVer }}" >> $GITHUB_ENV
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "DOCKER_TAG2=stable" >> $GITHUB_ENV
          else
            echo "DOCKER_TAG2=latest" >> $GITHUB_ENV
          fi      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: src/.
          file: src/Ballware.Meta.Service/Dockerfile
          platforms: linux/amd64,linux/arm64
          build-args: |
            GITHUB_PAT=${{ secrets.GITHUB_TOKEN }}
          push: true
          tags: |
            ghcr.io/ballware/ballware-meta-service:${{ env.DOCKER_TAG }}
            ghcr.io/ballware/ballware-meta-service:${{ env.DOCKER_TAG2 }}      
