[
  {
    "Id": "5a932a3b-be54-4e03-a155-ea5a440d5b33",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "identity",
    "Entity": "role",
    "DisplayName": "Rolle",
    "BaseUrl": "{identity}ballware-role-api",
    "ItemMappingScript": "function spreadClaims(item, claims) {\n    var claimDictionary = {};\n\n    claims.forEach(function(c) {\n        claimDictionary[c.Identifier] = c;\n    });\n\n    var containers = new Set(claims.map(function(c) {\n        return c.Container;\n    }));\n    var itemContainers = {};\n\n    containers.forEach(function(c) {\n        var unit = item.EditableRoleClaims.unit.claimValue;\n\n        itemContainers[c] = item.roleClaims ? item.roleClaims.filter(function(cl) {\n            console.log(cl);\n\n            return cl.claimType === 'right' && claimDictionary[cl.claimValue.replace(unit, '{{unit}}')].Container === c;\n        }).map(function(cl) {\n            return cl.claimValue.replace(unit, '{{unit}}');\n        }): null;\n    });\n\n    item.containers = itemContainers;\n    item.claims = claims;\n\n    return item;\n}\n\nitem.Id = item.id;\n\nitem.userIds = item.users ? item.users.map(function(user) {\n    return user.userId;\n}): [];\n\nitem.EditableRoleClaims = {};\n\nif (item.roleClaims) {\n    for (var i = 0; i < item.roleClaims.length; i++) {\n        var claim = item.roleClaims[i];\n        if (claim.claimType !== 'right') {\n            item.EditableRoleClaims[claim.claimType] = claim;\n        }\n    }\n}\n\nif (!item.EditableRoleClaims.unit) {\n    item.EditableRoleClaims.unit = {\n        id: 0,\n        roleId: item.Id,\n        claimType: 'unit',\n        claimValue: null\n    };\n}\n\nitem.containerClaims = customParam.containerClaims;\n\nreturn spreadClaims(item, customParam.rights);",
    "ItemReverseMappingScript": "function foldupClaims(item) {\n    var claims = [];\n    var claimDictionary = {};\n    var existingClaimDictionary = {};\n\n    if (item.claims) {\n        item.claims.forEach(function(cl) {\n            claimDictionary[cl.Identifier] = cl;\n        });\n    }\n\n    if (item.roleClaims) {\n        item.roleClaims.forEach(function(rc) {\n            existingClaimDictionary[rc.claimValue] = rc;\n        });\n    }\n\n    if (item.containers) {\n        var containerKeys = Object.keys(item.containers);\n\n        containerKeys\n        .map(function(k) {\n            return Reflect.get(item.containers, k)\n        })\n        .forEach(function(cl) {\n            if (cl) {\n                cl.forEach(function(c) {\n                    if (existingClaimDictionary[c.replace('{{unit}}', item.EditableRoleClaims.unit.claimValue)]) {\n                        claims.push(existingClaimDictionary[c.replace('{{unit}}', item.EditableRoleClaims.unit.claimValue)]);\n                    } else {\n                        claims.push({\n                            roleId: item.Id, claimType: 'right', claimValue: c.replace('{{unit}}', item.EditableRoleClaims.unit.claimValue)\n                        });\n                    }\n                });\n            }\n        });\n\n        item.roleClaims = claims;\n        item.container = null;\n    } else {\n        item.roleClaims = [];\n    }\n\n    return item;\n}\n\nitem = foldupClaims(item);\n\nif (item.EditableRoleClaims) {\n    item.roleClaims = item.roleClaims.filter(function(cl) {\n        return cl.claimType === 'right';\n    });\n\n    Object.keys(item.EditableRoleClaims).forEach(function(k) {\n        if (item.EditableRoleClaims[k].claimValue) {\n            item.roleClaims.push(item.EditableRoleClaims[k]);\n        }\n    });\n\n    item.EditableRoleClaims = null;\n}\n\nif (item.userIds) {\n    item.users = [];\n\n    item.userIds.forEach(function(r) {\n        item.users.push({\n            roleId: item.Id, userId: r\n        });\n    });\n\n    item.userIds = [];\n}\n\nreturn item;",
    "ListQuery": "[]",
    "ByIdQuery": null,
    "NewQuery": null,
    "ScalarValueQuery": null,
    "SaveStatement": null,
    "RemoveStatement": null,
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": null,
    "BeforeSaveScript": null,
    "SaveScript": null,
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": "{prepareMappingParam:'util.withLookupList(lookups.rightLookup, function(rights) {\\n\\n    var containerClaims = {};\\n\\n    rights.forEach(function(r) {\\n        if (!containerClaims[r.Container]) {\\n            containerClaims[r.Container] = [];\\n        }\\n\\n        containerClaims[r.Container].push(r);\\n    });\\n\\n\\n    callback({\\n        rights: rights,\\n        containerClaims: containerClaims\\n    });\\n});',prepareCustomParam:'util.withLookupList(lookups.entityRightLookup, function(rights) {\\n\\n    var containerClaims = {};\\n\\n    rights.forEach(function(r) {\\n        if (!containerClaims[r.Container]) {\\n            containerClaims[r.Container] = [];\\n        }\\n\\n        containerClaims[r.Container].push(r);\\n    });\\n\\n\\n    callback({\\n        rights: rights,\\n        containerClaims: containerClaims\\n    });\\n});'}",
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Rollen',allowMultiselect:false,columns:[{type:'text',dataMember:'displayName',caption:'Name',position:1},{type:'text',dataMember:'userSummary',caption:'Zugeordnete Benutzer',position:2}],summaries:[{dataMember:'DisplayName',summaryType:'count',groupSummary:true,totalSummary:true}]}]",
    "EditLayout": "[{identifier:'primary',colCount:1,colCountByScreen:{sm:1,lg:1},fullscreen:false,items:[{type:'text',options:{dataMember:'displayName',caption:'Name',required:true}},{type:'multilookup',options:{dataMember:'userIds',caption:'Zugeordnete Benutzer',lookup:'userLookup',valueExpr:'id',displayExpr:'name'}},{type:'group',options:{caption:'Berechtigungen für Stammdaten'},items:[{type:'staticmultilookup',options:{dataMember:'containers.user',caption:'Benutzer',itemsMember:'containerClaims.user',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.role',caption:'Rollen',itemsMember:'containerClaims.role',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.tenant',caption:'Mandanten',itemsMember:'containerClaims.tenant',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.lookup',caption:'Auswahllisten',itemsMember:'containerClaims.lookup',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.entity',caption:'Objektdefinitionen',itemsMember:'containerClaims.entity',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.notification',caption:'Benachrichtigungen',itemsMember:'containerClaims.notification',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.subscription',caption:'Abonnements',itemsMember:'containerClaims.subscription',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.documentation',caption:'Dokumentation',itemsMember:'containerClaims.documentation',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.statistic',caption:'Auswertungen',itemsMember:'containerClaims.statistic',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.page',caption:'Bildschirmseiten',itemsMember:'containerClaims.page',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.mlmodel',caption:'Machine Learning Modelle',itemsMember:'containerClaims.mlmodel',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.job',caption:'Hintergrundaufgaben',itemsMember:'containerClaims.job',valueExpr:'Identifier',displayExpr:'Name'}}]},{type:'group',options:{caption:'Berechtigungen für Aktivitäten'},items:[{type:'staticmultilookup',options:{dataMember:'containers.activity',caption:'Administrative Aufgaben',itemsMember:'containerClaims.activity',valueExpr:'Identifier',displayExpr:'Name'}},{type:'staticmultilookup',options:{dataMember:'containers.activity_answers',caption:'Zuständig für',itemsMember:'containerClaims.activity_answers',valueExpr:'Identifier',displayExpr:'Name'}}]}]}]",
    "CustomFunctions": "[]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "ae8265c0-afd7-4d7f-b4ee-6f38edb81431",
        "Entity": "role",
        "Identifier": "identity.role.view",
        "DisplayName": "Anzeigen",
        "Container": "role"
      },
      {
        "Id": "3b3843ac-9232-4789-9d0a-64787139bb3d",
        "Entity": "role",
        "Identifier": "identity.role.add",
        "DisplayName": "Anlegen",
        "Container": "role"
      },
      {
        "Id": "49db077d-a205-4cce-bee8-bff42637a08e",
        "Entity": "role",
        "Identifier": "identity.role.edit",
        "DisplayName": "Bearbeiten",
        "Container": "role"
      },
      {
        "Id": "d72d8e36-33bf-49eb-b95b-f799300700d3",
        "Entity": "role",
        "Identifier": "identity.role.delete",
        "DisplayName": "Löschen",
        "Container": "role"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": [],
    "RightsCheckScript": null
  },
  {
    "Id": "edec652d-03e9-45c7-af0e-b40ab30a6f32",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "identity",
    "Entity": "user",
    "DisplayName": "Benutzer",
    "BaseUrl": "{identity}ballware-user-api",
    "ItemMappingScript": "item.Id = item.id;\nitem.Email = item.email;\nitem.PersonId = item.personId;\nitem.RoleSummary = item.roleSummary\n\nitem.RoleIds = item.roles ? item.roles.map(function(role) {\n    return role.roleId;\n}): [];\n\nitem.EditableUserClaims = {};\n\nif (item.userClaims) {\n    for (var i = 0; i < item.userClaims.length; i++) {\n        var claim = item.userClaims[i];\n\n        if (claim.claimType !== 'allowed_tenant') {\n            item.EditableUserClaims[claim.claimType] = claim;\n        } else {\n            if (item.EditableUserClaims[claim.claimType]) {\n                item.EditableUserClaims[claim.claimType].claimValue.push(claim.claimValue);\n            } else {\n                item.EditableUserClaims[claim.claimType] = claim;\n                item.EditableUserClaims[claim.claimType].claimValue = [claim.claimValue];\n            }\n        }\n    }\n}\n\nif (!item.EditableUserClaims.person) {\n    item.EditableUserClaims.person = {\n        id: 0,\n        userId: item.Id,\n        claimType: 'person',\n        claimValue: null\n    };\n}\n\nif (!item.EditableUserClaims.displayname) {\n    item.EditableUserClaims.displayname = {\n        id: 0,\n        userId: item.Id,\n        claimType: 'displayname',\n        claimValue: null\n    };\n}\n\nif (!item.EditableUserClaims.tenant) {\n    item.EditableUserClaims.tenant = {\n        id: 0,\n        userId: item.Id,\n        claimType: 'tenant',\n        claimValue: null\n    };\n}\n\nif (!item.EditableUserClaims.allowed_tenant) {\n    item.EditableUserClaims.allowed_tenant = {\n        id: 0,\n        userId: item.Id,\n        claimType: 'allowed_tenant',\n        claimValue: []\n    };\n}\n\nreturn item;",
    "ItemReverseMappingScript": "item.id = item.Id;\nitem.userName = item.Email;\nitem.email = item.Email;\nitem.personId = item.PersonId;\n\nif (item.EditableUserClaims) {\n    item.userClaims = [];\n\n    Object.keys(item.EditableUserClaims).forEach(function (k) {\n        if (k !== 'allowed_tenant') {\n            if (item.EditableUserClaims[k].claimValue) {\n                item.userClaims.push(item.EditableUserClaims[k]);\n            }\n        } else {\n            if (item.EditableUserClaims[k].claimValue) {\n                item.EditableUserClaims[k].claimValue.forEach(function(at) {\n                    item.userClaims.push({\n                        id: 0,\n                        userId: item.Id,\n                        claimType: 'allowed_tenant',\n                        claimValue: at\n                    });\n                });\n            }\n        }\n    });\n\n    item.EditableUserClaims = null;\n}\n\nif (item.RoleIds) {\n    item.roles = item.RoleIds.map(function(rid) {\n        return {\n            userId: item.Id, roleId: rid\n        };\n    });\n\n    item.RoleIds = null;\n}\n\nreturn item;",
    "ListQuery": "[]",
    "ByIdQuery": null,
    "NewQuery": null,
    "ScalarValueQuery": null,
    "SaveStatement": null,
    "RemoveStatement": null,
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": null,
    "BeforeSaveScript": null,
    "SaveScript": null,
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": "{extendedRightsCheck:\"//if (right === 'add') {\\n//    return false;\\n//}\\n\\nreturn result;\"}",
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Benutzer',allowMultiselect:false,columns:[{__KEY__:'5834e2aa-c937-4dec-8696-572015f68878',type:'text',dataMember:'Email',caption:'Email',position:1},{__KEY__:'42f77f07-d9af-4774-b81e-626409ddb968',type:'text',dataMember:'RoleSummary',caption:'Zugeordnete Rollen',position:5},{__KEY__:'63aa3a2a-e71f-e5c2-506e-4184cd6dd3eb',position:4,type:'bool',dataMember:'enabled',caption:'Aktiv'},{__KEY__:'6ccfaddd-778b-4251-9483-4fceea36af30',position:2,type:'text',dataMember:'EditableUserClaims.displayname.claimValue',caption:'Anzeigename'}],summaries:[{dataMember:'Email',summaryType:'count',groupSummary:true,totalSummary:true}]}]",
    "EditLayout": "[{identifier:'primary',colCount:1,colCountByScreen:{sm:1,lg:1},fullscreen:false,items:[{type:'mail',options:{dataMember:'Email',caption:'Benutzerkennung',required:true}},{type:'bool',options:{dataMember:'enabled',caption:'Aktiv'}},{type:'text',options:{dataMember:'EditableUserClaims.displayname.claimValue',caption:'Anzeigename',required:true}},{type:'lookup',options:{dataMember:'EditableUserClaims.tenant.claimValue',caption:'Aktueller Mandant',lookup:'tenantLookup'}},{type:'multilookup',options:{dataMember:'EditableUserClaims.allowed_tenant.claimValue',caption:'Zugelassene Mandanten',lookup:'tenantLookup'}},{type:'multilookup',options:{dataMember:'RoleIds',caption:'Zugeordnete Rollen',lookup:'roleLookup',valueExpr:'id',displayExpr:'name'}}]}]",
    "CustomFunctions": "[]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "d1df40b9-f99b-4a01-9588-7c5ead2bb2d8",
        "Entity": "user",
        "Identifier": "identity.user.add",
        "DisplayName": "Anlegen",
        "Container": "user"
      },
      {
        "Id": "9165bede-9bc1-42ff-9085-810862024531",
        "Entity": "user",
        "Identifier": "identity.user.edit",
        "DisplayName": "Bearbeiten",
        "Container": "user"
      },
      {
        "Id": "e3ff6439-cdf4-4834-8a7b-ca901a579f07",
        "Entity": "user",
        "Identifier": "identity.user.delete",
        "DisplayName": "Löschen",
        "Container": "user"
      },
      {
        "Id": "c6560c37-ee20-460f-984e-d70226454095",
        "Entity": "user",
        "Identifier": "identity.user.view",
        "DisplayName": "Anzeigen",
        "Container": "user"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": [],
    "RightsCheckScript": "//if (right === 'add') {\n//    return false;\n//}\n\nreturn result;"
  },
  {
    "Id": "13bbf1f8-719d-483d-ac60-e297d17d9d4e",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "document",
    "DisplayName": "Beleg",
    "BaseUrl": "{document}document",
    "ItemMappingScript": "",
    "ItemReverseMappingScript": "",
    "ListQuery": "[{__KEY__:'ad3e1339-6aa0-a1e3-ff0c-1fead96434c8',identifier:'primary',query:'SELECT Uuid as Id, DisplayName, Entity, State\\nFROM Document\\nWHERE TenantId = @tenantId\\nORDER BY Entity, DisplayName'},{__KEY__:'7b5da2bc-9f35-469b-7cc5-cbbfcb637b55',identifier:'exportjson',query:'SELECT \\n  Uuid as Id, \\n  DisplayName, \\n  Entity, \\n  State, \\n  convert(nvarchar(max), ReportBinary, 2) as ReportBinary, \\n  ReportParameter \\nFROM Document WHERE TenantId=@tenantId and Uuid in (@id)'}]",
    "ByIdQuery": "[{identifier:'primary',query:'SELECT Uuid as Id, DisplayName, Entity, State, ReportParameter FROM Document WHERE TenantId=@tenantId and Uuid = @id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"Id=NEWID(), DisplayName=null, Entity=null, State=0, ReportParameter=null\" }]",
    "ScalarValueQuery": "primary",
    "SaveStatement": "[{identifier:'primary',query:'UPDATE document SET DisplayName=@DisplayName, Entity=@Entity, ReportParameter=@ReportParameter, State=@State, LastChangerId = @claim_sub, LastChangeStamp = GETDATE() WHERE Uuid = @Id;  if @@ROWCOUNT = 0 BEGIN INSERT INTO document (Uuid, TenantId, DisplayName, Entity, ReportParameter, State, CreatorId, CreateStamp) SELECT @Id, @tenantId, @DisplayName, @Entity, @ReportParameter, @State, @claim_sub, GETDATE() WHERE NOT EXISTS (SELECT * FROM document WHERE tenantId = @tenantId and Uuid = @Id) END'},{__KEY__:'347322ae-3b75-e7ec-5847-1e8293cfe72b',identifier:'state',query:'UPDATE document SET \\n  State=@Status, LastChangerId=@claim_sub, LastChangeStamp=GETDATE() \\nWHERE TenantId=@tenantId and Uuid=@Id;'},{__KEY__:'6bdd0ce1-d82b-86e0-3afc-1a8183aab674',identifier:'importjson',query:'UPDATE document SET \\n  DisplayName=@DisplayName, \\n  Entity=@Entity, \\n  ReportParameter=@ReportParameter, \\n  ReportBinary=CONVERT(varbinary(max), @ReportBinary, 2),\\n  State=@State, \\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId=@tenantId and Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO document (Uuid, TenantId, DisplayName, Entity, ReportParameter, ReportBinary, State, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @DisplayName, @Entity, @ReportParameter, CONVERT(varbinary(max), @ReportBinary, 2), @State, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM document WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'}]",
    "RemoveStatement": "delete from document where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": "",
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": "",
    "BeforeSaveScript": "",
    "SaveScript": "",
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": "{extendedRightsCheck:\"if (right === 'opendesigner') {\\n    return userinfo.right.includes('meta.document.add');\\n} else if (right === 'refreshsources' || right === 'editdesigner' || right === 'state') {\\n    return userinfo.right.includes('meta.document.edit');\\n} else if (right === 'add') {\\n    return false;\\n}\\n\\nreturn result;\",prepareCustomFunction:\"if (identifier === 'opendesigner') {\\n  util.openDocumentDesigner('new', function(url) {\\n    executeCallback(url);\\n  });  \\n} else if (identifier === 'editdesigner') {  \\n  util.openDocumentDesigner(selection[0].Id, function(url) {\\n    executeCallback(url);\\n  });\\n} else if (identifier === 'state') {\\n  util.withLookupList(lookups.allowedMetaStateLookup(selection.map(function(item) {\\n      return item.Id;\\n  })), function(states) {\\n      if (states && states.length > 0) {\\n          executeCallback({\\n              states: states,\\n              items: selection\\n          }, selection.length > 1 ? 'Status für ' + selection.length + ' Dokumente ändern' : 'Status für Dokument ändern');\\n      } else {\\n          messageCallback('Statuswechsel nicht möglich');\\n      }\\n  });\\n} else if (identifier === 'refreshsources') {\\n  util.updateDatasources(selection.map(s => s.Id), function() {\\n    messageCallback('Datenquellen-Aktualisierung ausgelöst')\\n  }, function(err) {\\n    messageCallback('Es ist ein Fehler aufgetreten: ' + err);\\n  });   \\n}\",evaluateCustomFunction:\"switch (identifier) {\\n    case 'state': {\\n        var items = param.items.map(function(item) {\\n            item.State = param.NewStateId;\\n            return item;\\n        });\\n\\n        executeCallback(items);\\n    }\\n        break;\\n}\",rightsParamForHead:'',rightsParamForItem:'',prepareCustomParam:'',prepareGridLayout:'',prepareEditLayout:'',prepareMaterializedEditItem:'',editorPreparing:'',editorInitialized:'',editorValueChanged:'',editorEntered:\"if (identifier === 'NewStateId') {\\n    editUtil.setEditorOption('NewStateId', 'items', item.states)\\n}\",editorValidating:'',editorEvent:'',detailGridCellPreparing:'',detailGridRowValidating:'',initNewDetailItem:''}",
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Belege',allowMultiselect:true,columns:[{type:'lookup',dataMember:'State',caption:'Status',lookup:'stateLookup',position:1},{type:'lookup',dataMember:'Entity',caption:'Objekt',lookup:'entityIdentifierLookup',position:2},{type:'text',dataMember:'DisplayName',caption:'Anzeigename',position:3}],summaries:[{dataMember:'Entity',summaryType:'count',groupSummary:true,totalSummary:true}],details:''}]",
    "EditLayout": "[{identifier:'primary',colCount:1,colCountByScreen:{sm:1,lg:1},fullscreen:false,items:[{type:'lookup',options:{dataMember:'State',caption:'Status',lookup:'allowedMetaStateLookup',lookupParam:'Id',required:true}},{type:'lookup',options:{dataMember:'Entity',caption:'Objekt',lookup:'entityLookup',readonly:true}},{type:'text',options:{dataMember:'DisplayName',caption:'Anzeigename',required:true}}]},{__KEY__:'5276d934-cc9c-ee4f-8d30-d5a5024a5258',items:[{type:'lookup',options:{dataMember:'NewStateId',caption:'Neuer Status',displayExpr:'Name',valueExpr:'State',required:true}}],identifier:'state'}]",
    "CustomFunctions": "[{__KEY__:'8918bd27-6849-166f-5b3b-ed59262f71f2',id:'opendesigner',text:'Beleg bearbeiten',type:'default_add',externalEditor:true,icon:'glyphicon glyphicon-file',options:{}},{__KEY__:'1b1d1178-1c6e-484e-48ba-6947e4079a94',id:'refreshsources',type:'edit',text:'Datenquelle aktualisieren',icon:'bi bi-arrow-clockwise',multi:true,externalEditor:false,options:{}},{__KEY__:'491d0c0d-7db9-aa27-0523-7ecbac6acb89',id:'editdesigner',type:'default_edit',text:'Beleg bearbeiten',icon:'bi bi-pencil-fill',multi:false,externalEditor:true,options:{}},{__KEY__:'4a4791e9-dde5-6ecc-2e91-941267c28fc3',id:'state',type:'edit',text:'Status ändern',icon:'bi bi-arrow-left-right',multi:true,editLayout:'state',options:{}},{__KEY__:'1ccc1234-ac46-d879-9b8d-568dc14780f7',options:{format:'json'},id:'exportjson',type:'export',text:'Exportieren',icon:'bi bi-download',multi:true},{__KEY__:'cb5a5cb3-0484-4ceb-94e0-71bd98be68ea',options:{format:'json'},id:'importjson',type:'import',text:'Importieren',icon:'bi bi-upload'}]",
    "StateColumn": "State",
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": "hasRight('meta.document.edit');",
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [
      {
        "Id": "e0ebbdf7-6411-4a92-a6d8-19351223db98",
        "Entity": "document",
        "State": 10,
        "Name": "Produktiv",
        "Successors": "['46b8eeab-edd7-4dae-9451-d3fd3a5df708']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      },
      {
        "Id": "78646bcf-16f0-43b5-9c08-32ad4e48885e",
        "Entity": "document",
        "State": 20,
        "Name": "Benachrichtigung",
        "Successors": "['46b8eeab-edd7-4dae-9451-d3fd3a5df708']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      },
      {
        "Id": "a186a622-ec77-471e-a024-c93baf160121",
        "Entity": "document",
        "State": 0,
        "Name": "Entwicklung",
        "Successors": "['46b8eeab-edd7-4dae-9451-d3fd3a5df708']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      },
      {
        "Id": "46b8eeab-edd7-4dae-9451-d3fd3a5df708",
        "Entity": "document",
        "State": 5,
        "Name": "Test",
        "Successors": "['a186a622-ec77-471e-a024-c93baf160121','e0ebbdf7-6411-4a92-a6d8-19351223db98','30ef35c8-ffb8-4f84-bd8b-73875b751030','78646bcf-16f0-43b5-9c08-32ad4e48885e']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      }
    ],
    "Rights": [
      {
        "Id": "bc8823c3-5afe-48a7-b1ed-11c8bc39491d",
        "Entity": "document",
        "Identifier": "meta.document.print",
        "DisplayName": "Drucken",
        "Container": "document"
      },
      {
        "Id": "7730d31a-90a5-4709-9fff-198d16753d5b",
        "Entity": "document",
        "Identifier": "meta.document.visiblestate.20",
        "DisplayName": "Benachrichtigung",
        "Container": "document_visiblestate"
      },
      {
        "Id": "eebe8192-c67e-469d-973c-234cf4b44aa9",
        "Entity": "document",
        "Identifier": "meta.document.visiblestate.10",
        "DisplayName": "Produktiv",
        "Container": "document_visiblestate"
      },
      {
        "Id": "b9cc291b-2650-4e4f-8309-70175e3a06e2",
        "Entity": "document",
        "Identifier": "meta.document.visiblestate.0",
        "DisplayName": "Entwicklung",
        "Container": "document_visiblestate"
      },
      {
        "Id": "fd8c2a89-dab8-46b8-bad5-93f0c70fa165",
        "Entity": "document",
        "Identifier": "meta.document.edit",
        "DisplayName": "Bearbeiten",
        "Container": "document"
      },
      {
        "Id": "58252516-11d6-4f48-ac16-a511037cb6af",
        "Entity": "document",
        "Identifier": "meta.document.delete",
        "DisplayName": "Löschen",
        "Container": "document"
      },
      {
        "Id": "dfb29dd8-a6e9-43f2-8671-a8ed03152745",
        "Entity": "document",
        "Identifier": "meta.document.visiblestate.5",
        "DisplayName": "Test",
        "Container": "document_visiblestate"
      },
      {
        "Id": "508d9869-cada-4c39-956b-c665b273af5e",
        "Entity": "document",
        "Identifier": "meta.document.add",
        "DisplayName": "Anlegen",
        "Container": "document"
      },
      {
        "Id": "e6756242-b03f-429f-9594-f362bf632c37",
        "Entity": "document",
        "Identifier": "meta.document.view",
        "DisplayName": "Anzeigen",
        "Container": "document"
      },
      {
        "Id": "1691afd3-a99f-4a24-bb89-abd45144e924",
        "Entity": "document",
        "Identifier": "meta.document.exportjson",
        "DisplayName": "Exportieren",
        "Container": "document"
      },
      {
        "Id": "11b6df10-a326-4e1b-b5de-baef81968228",
        "Entity": "document",
        "Identifier": "meta.document.importjson",
        "DisplayName": "Importieren",
        "Container": "document"
      }
    ],
    "Pickvalues": [
      {
        "Id": "fe56906a-83c6-4494-af6a-0de14befe343",
        "Entity": "document",
        "Field": "state",
        "Value": 0,
        "Text": "Entwicklung",
        "Sorting": 1
      },
      {
        "Id": "3204fdc9-b6f6-407c-b72d-b23972ff7533",
        "Entity": "document",
        "Field": "state",
        "Value": 5,
        "Text": "Test",
        "Sorting": 2
      },
      {
        "Id": "74898926-f0ac-4ea7-a056-94250d405e24",
        "Entity": "document",
        "Field": "state",
        "Value": 10,
        "Text": "Produktiv",
        "Sorting": 3
      },
      {
        "Id": "503b92d6-6163-4f57-9408-ebbf5ce6193f",
        "Entity": "document",
        "Field": "state",
        "Value": 20,
        "Text": "Benachrichtigung",
        "Sorting": 5
      }
    ]
  },
  {
    "Id": "b1eb6088-f857-4e65-a213-346222c45b10",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "documentation",
    "DisplayName": "Dokumentation",
    "BaseUrl": "{meta}documentation",
    "ItemMappingScript": "",
    "ItemReverseMappingScript": "",
    "ListQuery": "[{__KEY__:'e4252b5c-5a12-9f5b-5365-c1b4a8dbcc8e',identifier:'primary',query:'SELECT Uuid as Id, Content, Entity, Field \\nFROM documentation\\nWHERE TenantId = @tenantId\\nORDER BY Entity, Field'},{__KEY__:'5191f783-8860-c457-54e9-0e8cf9ad1adc',identifier:'count',query:'SELECT COUNT(Id) \\n  FROM documentation \\nWHERE TenantId = @tenantId'},{__KEY__:'401c2538-f3b9-f1be-36ca-b736aac71ca3',identifier:'exportjson',query:'SELECT Uuid as Id, Content, Entity, Field FROM documentation WHERE TenantId=@tenantId and Uuid in (@id)'}]",
    "ByIdQuery": "[{identifier:'primary',query:'SELECT Uuid as Id, Content, Entity, Field FROM documentation WHERE TenantId=@tenantId and Uuid = @id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"SELECT Id=NEWID(), Entity=null, Field=null, Content=null\" }]",
    "ScalarValueQuery": "",
    "SaveStatement": "[{identifier:'primary',query:'UPDATE documentation SET \\n  Content=@Content, \\n  Entity=@Entity, \\n  Field=@Field, \\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId=@tenantId and Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO documentation (Uuid, TenantId, Content, Entity, Field, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @Content, @Entity, @Field, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM documentation WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'}]",
    "RemoveStatement": "delete from documentation where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": "",
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": "",
    "BeforeSaveScript": "",
    "SaveScript": "",
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": null,
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Dokumentation',allowMultiselect:true,columns:[{type:'lookup',dataMember:'Entity',caption:'Objektdefinition',lookup:'entityIdentifierLookup',position:1},{type:'text',dataMember:'Field',caption:'Feld',position:2}],summaries:[{dataMember:'Entity',summaryType:'count',groupSummary:true,totalSummary:true}],details:''}]",
    "EditLayout": "[{identifier:'primary',colCount:1,colCountByScreen:{sm:1,lg:1},fullscreen:true,items:[{type:'lookup',options:{dataMember:'Entity',caption:'Objektdefinition',lookup:'entityIdentifierLookup',allowCustomValue:true,required:true}},{type:'text',options:{dataMember:'Field',caption:'Feld'}},{type:'richtext',options:{dataMember:'Content',caption:'Inhalt',height:'100%'}}]}]",
    "CustomFunctions": "[{__KEY__:'83ed4e5c-4a73-6b9c-8856-8d6dac55b9e6',options:{format:'json'},id:'exportjson',type:'export',text:'Exportieren',icon:'bi bi-download',multi:true},{__KEY__:'5c68d5d7-c7d0-8a31-c331-d762761c8ee3',options:{format:'json'},id:'importjson',type:'import',text:'Importieren',icon:'bi bi-upload'}]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "76567f33-be19-43ba-9f9c-2f63ce9d55cb",
        "Entity": "documentation",
        "Identifier": "meta.documentation.edit",
        "DisplayName": "Bearbeiten",
        "Container": "documentation"
      },
      {
        "Id": "6f7ae5a8-0694-49e7-bfa3-8ef9d5aa4d5f",
        "Entity": "documentation",
        "Identifier": "meta.documentation.add",
        "DisplayName": "Anlegen",
        "Container": "documentation"
      },
      {
        "Id": "4e86680d-6e66-4fe9-ac9f-c3ab5fe51055",
        "Entity": "documentation",
        "Identifier": "meta.documentation.view",
        "DisplayName": "Anzeigen",
        "Container": "documentation"
      },
      {
        "Id": "b84e3f8a-f164-4e41-b3ca-ffbc01ccf692",
        "Entity": "documentation",
        "Identifier": "meta.documentation.delete",
        "DisplayName": "Löschen",
        "Container": "documentation"
      },
      {
        "Id": "fc081a92-5b9f-42e9-b35c-26e0a18d8dac",
        "Entity": "documentation",
        "Identifier": "meta.documentation.exportjson",
        "DisplayName": "Exportieren",
        "Container": "documentation"
      },
      {
        "Id": "693db3b5-0c38-4391-93c3-0f421f129cb0",
        "Entity": "documentation",
        "Identifier": "meta.documentation.importjson",
        "DisplayName": "Importieren",
        "Container": "documentation"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": []
  },
  {
    "Id": "b7e9f406-2377-4be8-82b7-439802043f2a",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "entity",
    "DisplayName": "Objektdefinition",
    "BaseUrl": "{meta}entity",
    "ItemMappingScript": "if (item.Lookups) {\n    item.EditableLookups = util.parse(item.Lookups);\n} else {\n    item.EditableLookups = [];\n}\n\nif (item.CustomScripts) {\n    item.EditableCustomScripts = util.parse(item.CustomScripts);\n}\n\nif (item.CustomFunctions) {\n    item.EditableCustomFunctions = util.parse(item.CustomFunctions);\n}\n\nif (item.ListQuery) {\n    item.EditableListQueries = util.parse(item.ListQuery);\n}\n\nif (item.ByIdQuery) {\n    item.EditableByIdQueries = util.parse(item.ByIdQuery);\n}\n\nif (item.SaveStatement) {\n  item.EditableSaveStatements = util.parse(item.SaveStatement);\n}\n\nif (item.Picklists) {\n    item.EditablePicklists = util.parse(item.Picklists);\n}\n\nif (item.Indices) {\n\titem.EditableIndices = util.parse(item.Indices);\n}\n\nif (item.GridLayout) {\n    item.EditableGridLayout = util.parse(item.GridLayout);\n}\n\nif (item.EditLayout) {\n    item.EditableEditLayout = util.parse(item.EditLayout);\n}\n\nif (item.Templates) {\n    item.EditableTemplates = util.parse(item.Templates);\n}\n\nif (item.States) {\n\titem.EditableStates = item.States.map(function(state) {\n\t\tif (state.Successors) {\n\t\t\tstate.EditableSuccessors = util.parse(state.Successors);\n\t\t} else {\n\t\t\tstate.EditableSuccessors = [];\n\t\t}\n\t\t\n\t\treturn state;\n\t});\n} else {\n\titem.EditableStates = [];\n}\n\n\nreturn item;",
    "ItemReverseMappingScript": "if (item.EditableLookups) {\n    item.Lookups = util.stringify(item.EditableLookups);\n\n    item.EditableLookups = null;\n}\n\nif (item.EditableCustomScripts) {\n    item.CustomScripts = util.stringify(item.EditableCustomScripts);\n\n    item.EditableCustomScripts = null;\n}\n\nif (item.EditableCustomFunctions) {\n    item.CustomFunctions = util.stringify(item.EditableCustomFunctions);\n\n    item.EditableCustomFunctions = null;\n}\n\nif (item.EditableListQueries) {\n    item.ListQuery = util.stringify(item.EditableListQueries);\n    item.EditableListQueries = null;\n}\n\nif (item.EditableByIdQueries) {\n    item.ByIdQuery = util.stringify(item.EditableByIdQueries);\n    item.EditableByIdQueries = null;\n}\n\nif (item.EditableSaveStatements) {\n\titem.SaveStatement = util.stringify(item.EditableSaveStatements);\n  \titem.EditableSaveStatements = null;\n}\n\nif (item.EditablePicklists) {\n    item.Picklists = util.stringify(item.EditablePicklists);\n    item.EditablePicklists = null;\n}\n\nif (item.EditableIndices) {\n\titem.Indices = JSON.stringify(item.EditableIndices);\n}\n\nif (item.EditableGridLayout) {\n    item.GridLayout = util.stringify(item.EditableGridLayout);\n    item.EditableGridLayout = null\n}\n\nif (item.EditableEditLayout) {\n    item.EditLayout = util.stringify(item.EditableEditLayout);\n    item.EditableEditLayout = null\n}\n\nif (item.EditableTemplates) {\n    item.Templates = util.stringify(item.EditableTemplates);\n    item.EditableTemplates = null\n}\n\nif (item.EditableStates) {\n\titem.States = item.EditableStates.map(function (state) {\n\t\tif (state.EditableSuccessors) {\n\t\t\tstate.Successors = util.stringify(state.EditableSuccessors);\n\t\t\t\n\t\t\tstate.EditableSuccessors = null;\n\t\t}\n\t\t\n\t\treturn state;\n\t});\n\t\n\titem.EditableStates = null;\n}\n\nfunction mapDatabaseColumnType(intType) {\n  switch (intType) {\n    case 0:\n      return 'bit';\n    case 1:\n      return 'int';\n    case 2:\n      return 'decimal';\n    case 3:\n      return 'float';\n    case 4:\n      return 'date';\n    case 5:\n      return 'datetime';\n    case 6:\n      return 'nvarchar';\n    case 7:\n      return 'text';\n    case 8:\n      return 'uniqueidentifier';\n    case 9:\n      return 'int';\n    case 10:\n      return 'time';\n  }\n\n  return 'unknown';\n}\n  \nif (item.GeneratedSchema) {\n  var indices = JSON.parse(item.Indices ?? '[]');\n  \n  var serializedProviderModel = JSON.stringify({\n    tableName: item.Entity,\n    noIdentity: item.NoIdentity,\n    customColumns: item.CharacteristicAssociations ? item.CharacteristicAssociations.map(c => ({\n      columnName: c.Identifier,\n      columnType: mapDatabaseColumnType(c.Type),\n      maxLength: c.Length,\n      nullable: !c.Required\n    })) : [],\n    customIndexes: indices.map(idx => ({\n      indexName: null,\n      unique: idx.unique,\n      columnNames: idx.members\n    }))\n  });\n\n  item.ProviderModelDefinition = serializedProviderModel;\n}\n\nreturn item;",
    "ListQuery": "[{__KEY__:'80afa201-951e-e48e-c9b0-2ba63d41a3eb',identifier:'primary',query:'SELECT \\n  Uuid as Id, \\n  Application, \\n  Entity, \\n  BaseUrl, \\n  ByIdQuery, \\n  ByIdScript, \\n  CustomFunctions, \\n  CustomScripts, \\n  DisplayName, \\n  EditLayout, \\n  GeneratedSchema, \\n  GridLayout, \\n  ItemMappingScript, \\n  ItemReverseMappingScript, \\n  ListQuery, \\n  Lookups, \\n  Meta, \\n  NewQuery, \\n  Picklists, \\n  RemovePreliminaryCheckScript, \\n  RemoveStatement, \\n  SaveStatement, \\n  ScalarValueQuery, \\n  StateAllowedScript, \\n  StateColumn, \\n  StateReasonColumn,\\n  ProviderModelDefinition\\nFROM entity\\nWHERE TenantId = @tenantId\\nORDER BY Application, Entity'},{__KEY__:'32275a8e-6652-755a-6206-8d241e54e4ed',identifier:'exportjson',query:'SELECT \\n  Uuid as Id, \\n  Application, \\n  Entity, \\n  BaseUrl, \\n  ByIdQuery, \\n  ByIdScript, \\n  CustomFunctions, \\n  CustomScripts, \\n  DisplayName, \\n  EditLayout, \\n  GeneratedSchema, \\n  NoIdentity, \\n  GridLayout, \\n  ItemMappingScript, \\n  ItemReverseMappingScript, \\n  ListQuery, \\n  ListScript,\\n  Lookups, \\n  Meta, \\n  NewQuery, \\n  Picklists, \\n  Indices, \\n  RemovePreliminaryCheckScript, \\n  RemoveStatement, \\n  RemoveScript,\\n  BeforeSaveScript, \\n  SaveScript, \\n  SaveStatement, \\n  ScalarValueQuery, \\n  StateAllowedScript, \\n  StateColumn, \\n  StateReasonColumn,\\n  Templates,\\n  ProviderModelDefinition\\nFROM entity WHERE TenantId=@tenantId and Uuid in (@id)\\nORDER BY Application, Entity'}]",
    "ByIdQuery": "[{identifier:'primary',query:'SELECT \\n  Uuid as Id, \\n  Application, \\n  Entity, \\n  BaseUrl, \\n  ByIdQuery, \\n  ByIdScript, \\n  CustomFunctions, \\n  CustomScripts, \\n  DisplayName, \\n  EditLayout, \\n  GeneratedSchema, \\n  NoIdentity, \\n  GridLayout, \\n  ItemMappingScript, \\n  ItemReverseMappingScript, \\n  ListQuery, \\n  ListScript,\\n  Lookups, \\n  Meta, \\n  NewQuery, \\n  Picklists, \\n  Indices, \\n  RemovePreliminaryCheckScript, \\n  RemoveStatement, \\n  RemoveScript,\\n  BeforeSaveScript, \\n  SaveScript, \\n  SaveStatement, \\n  ScalarValueQuery, \\n  StateAllowedScript, \\n  StateColumn, \\n  StateReasonColumn,\\n  Templates,\\n  ProviderModelDefinition\\nFROM entity WHERE TenantId=@tenantId and Uuid = @id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"SELECT Id=NEWID(), Application=null, Entity=null, BaseUrl=null, ByIdQuery='[]', ByIdScript=null, CustomFunctions='[]', CustomScripts=null, DisplayName=null, EditLayout='[]', GeneratedSchema=0, NoIdentity=0, GridLayout='[]', ItemMappingScript=null, ItemReverseMappingScript=null, ListQuery='[]', ListScript=null, Lookups='[]', Meta=0, NewQuery='[]', Picklists='[]', Indices='[]', RemovePreliminaryCheckScript=null, RemoveStatement=null, RemoveScript=null, BeforeSaveScript=null, SaveScript=null, SaveStatement='[]', ScalarValueQuery=null, StateAllowedScript=null, StateColumn=null, StateReasonColumn=null, Templates='[]', ProviderModelDefinition=null\" }]",
    "ScalarValueQuery": "",
    "SaveStatement": "[{identifier:'primary',query:'UPDATE entity SET \\n  Application=@Application, \\n  Entity=@Entity, \\n  BaseUrl=@BaseUrl, \\n  ByIdQuery=@ByIdQuery, \\n  ByIdScript=@ByIdScript, \\n  CustomFunctions=@CustomFunctions, \\n  CustomScripts=@CustomScripts, \\n  DisplayName=@DisplayName, \\n  EditLayout=@EditLayout, \\n  GeneratedSchema=@GeneratedSchema, \\n  NoIdentity=@NoIdentity, \\n  GridLayout=@GridLayout, \\n  ItemMappingScript=@ItemMappingScript, \\n  ItemReverseMappingScript=@ItemReverseMappingScript, \\n  ListQuery=@ListQuery, \\n  ListScript=@ListScript,\\n  Lookups=@Lookups, \\n  Meta=@Meta, \\n  NewQuery=@NewQuery, \\n  Picklists=@Picklists, \\n  Indices=@Indices, \\n  RemovePreliminaryCheckScript=@RemovePreliminaryCheckScript, \\n  RemoveStatement=@RemoveStatement, \\n  RemoveScript=@RemoveScript,\\n  BeforeSaveScript=@BeforeSaveScript, \\n  SaveScript=@SaveScript, \\n  SaveStatement=@SaveStatement, \\n  ScalarValueQuery=@ScalarValueQuery, \\n  StateAllowedScript=@StateAllowedScript, \\n  StateColumn=@StateColumn, \\n  StateReasonColumn=@StateReasonColumn, \\n  Templates=@Templates,\\n  ProviderModelDefinition=@ProviderModelDefinition,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId=@tenantId and Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO entity (Uuid, TenantId, Application, Entity, BaseUrl, ByIdQuery, ByIdScript, CustomFunctions, CustomScripts, DisplayName, EditLayout, GeneratedSchema, NoIdentity, GridLayout, ItemMappingScript, ItemReverseMappingScript, ListQuery, ListScript, Lookups, Meta, NewQuery, Picklists, Indices, RemovePreliminaryCheckScript, RemoveStatement, RemoveScript, BeforeSaveScript, SaveScript, SaveStatement, ScalarValueQuery, StateAllowedScript, StateColumn, StateReasonColumn, Templates, ProviderModelDefinition, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @Application, @Entity, @BaseUrl, @ByIdQuery, @ByIdScript, @CustomFunctions, @CustomScripts, @DisplayName, @EditLayout, @GeneratedSchema, @NoIdentity, @GridLayout, @ItemMappingScript, @ItemReverseMappingScript, @ListQuery, @ListScript, @Lookups, @Meta, @NewQuery, @Picklists, @Indices, @RemovePreliminaryCheckScript, @RemoveStatement, @RemoveScript, @BeforeSaveScript, @SaveScript, @SaveStatement, @ScalarValueQuery, @StateAllowedScript, @StateColumn, @StateReasonColumn, @Templates, @ProviderModelDefinition, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM entity WHERE tenantId = @tenantId and Uuid = @Id) \\nEND\\n'},{__KEY__:'c6b9ba32-53cd-11a9-7e1e-567bb4de9d10',identifier:'providermodel',query:'UPDATE Entity SET \\n  ProviderModelDefinition=@ProviderModelDefinition,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId=@tenantId AND Uuid = @Id; '}]",
    "RemoveStatement": "delete from processingstate where TenantId=@tenantId and Entity = (select top 1 Entity from entity where TenantId=@tenantId and Uuid=@id);\ndelete from pickvalue where TenantId=@tenantId and Entity = (select top 1 Entity from entity where TenantId=@tenantId and Uuid=@id);\ndelete from characteristicassociation where TenantId=@tenantId and Entity = (select top 1 Entity from entity where TenantId=@tenantId and Uuid=@id);\ndelete from entityright where TenantId=@tenantId and Entity = (select top 1 Entity from entity where TenantId=@tenantId and Uuid=@id);\ndelete from entity where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": "",
    "ListScript": null,
    "RemoveScript": "dropEntitySchema(params.id);",
    "ByIdScript": "if (identifier === 'exportjson') {\n  addProperty('States', getList('processingstate', 'Uuid as Id,State,Name,RecordFinished,RecordLocked,Successors,ReasonRequired', 'TenantId=@tenantId and Entity=@Entity', item));\n}\n\nif (identifier === 'exportjson') {\n  addProperty('Rights', getList('entityright', 'Uuid as Id,Identifier,DisplayName,Container', 'TenantId=@tenantId and Entity=@Entity', item));\n}\n\nif (identifier === 'exportjson') {\n  addProperty('Pickvalues', getList('pickvalue', 'Uuid as Id,Field,Value,Text,Sorting', 'TenantId=@tenantId and Entity=@Entity', item));\n}\n\nif (identifier === 'primary' || identifier === 'exportjson') {\n  addProperty('CharacteristicAssociations', getList('characteristicassociation', 'Uuid as Id,CharacteristicGroupId,Active,Required,Sorting,CharacteristicId,Readonly,Identifier,Type,Length', 'TenantId=@tenantId and Entity=@Entity', item));\n}",
    "BeforeSaveScript": "",
    "SaveScript": "if (item.States) {\n\tvar existingStates = getList('processingstate', 'Uuid as Id,State,Name,RecordFinished,RecordLocked,Successors,ReasonRequired', 'TenantId=@tenantId and Entity=@Entity', item);\n\n\tmergeAssociations(existingStates, item.States, function(c) {\n\t\t\t\treturn c.Id;\n\t\t\t}, function(r) {\n\t\t\t\tdbDelete('processingstate', 'TenantId=@tenantId and Entity=@entity and Uuid=@stateId', {\n\t\t\t\t\tentity: item.Entity,\n\t\t\t\t\tstateId: r.Id\n\t\t\t\t});\n\t\t\t}, function(a) {\n\t\t\t\tdbInsert('processingstate', 'Uuid,TenantId,Entity,State,Name,RecordFinished,RecordLocked,Successors,ReasonRequired', '@id, @tenantId, @entity, @state, @name, @recordFinished, @recordLocked, @successors, @reasonRequired', {\n\t\t\t\t\tid: a.Id,\n\t\t\t\t\ttenantId: tenantId,\n\t\t\t\t\tentity: item.Entity,\n\t\t\t\t\tstate: a.State,\n\t\t\t\t\tname: a.Name,\n\t\t\t\t\trecordFinished: a.RecordFinished,\n\t\t\t\t\trecordLocked: a.RecordLocked,\n\t\t\t\t\tsuccessors: a.Successors,\n\t\t\t\t\treasonRequired: a.ReasonRequired\n\t\t\t\t});\n\t\t\t}, function(u) {\n\t\t\t\tdbUpdate('processingstate', 'State=@state,Name=@name,RecordFinished=@recordFinished,RecordLocked=@recordLocked,Successors=@successors,ReasonRequired=@reasonRequired', 'TenantId=@tenantId and Uuid=@id', {\n\t\t\t\t\tid: u.Id,\n\t\t\t\t\ttenantId: tenantId,\n\t\t\t\t\tstate: u.State,\n\t\t\t\t\tname: u.Name,\n\t\t\t\t\trecordFinished: u.RecordFinished,\n\t\t\t\t\trecordLocked: u.RecordLocked,\n\t\t\t\t\tsuccessors: u.Successors,\n\t\t\t\t\treasonRequired: u.ReasonRequired\n\t\t\t\t});\n\t\t\t}\n\t);\n}\n\nif (item.Rights) {\n\tvar existingRights = getList('entityright', 'Uuid as Id,Identifier,DisplayName,Container', 'TenantId=@tenantId and Entity=@Entity', item);\n\n\tmergeAssociations(existingRights, item.Rights, function(c) {\n\t\t\t\treturn c.Id;\n\t\t\t}, function(r) {\n\t\t\t\tdbDelete('entityright', 'TenantId=@tenantId and Entity=@entity and Uuid=@rightId', {\n\t\t\t\t\tentity: item.Entity,\n\t\t\t\t\trightId: r.Id\n\t\t\t\t});\n\t\t\t}, function(a) {\n\t\t\t\tdbInsert('entityright', 'Uuid,TenantId,Entity,Identifier,DisplayName,Container', '@id, @tenantId, @entity, @identifier, @displayName, @container', {\n\t\t\t\t\tid: a.Id,\n\t\t\t\t\ttenantId: tenantId,\n\t\t\t\t\tentity: item.Entity,\n\t\t\t\t\tidentifier: a.Identifier,\n\t\t\t\t\tdisplayName: a.DisplayName,\n\t\t\t\t\tcontainer: a.Container\n\t\t\t\t});\n\t\t\t}, function(u) {\n\t\t\t\tdbUpdate('entityright', 'Identifier=@identifier,DisplayName=@displayName,Container=@container', 'TenantId=@tenantId and Uuid=@id', {\n\t\t\t\t\tid: u.Id,\n\t\t\t\t\ttenantId: tenantId,\n\t\t\t\t\tidentifier: u.Identifier,\n\t\t\t\t\tdisplayName: u.DisplayName,\n\t\t\t\t\tcontainer: u.Container\n\t\t\t\t});\n\t\t\t}\n\t);\n}\n\nif (item.Pickvalues) {\n\tvar existingPickvalues = getList('pickvalue', 'Uuid as Id,Field,Value,Text,Sorting', 'TenantId=@tenantId and Entity=@Entity', item);\n\n\tmergeAssociations(existingPickvalues, item.Pickvalues, function(c) {\n\t\t\t\treturn c.Id;\n\t\t\t}, function(r) {\n\t\t\t\tdbDelete('pickvalue', 'TenantId=@tenantId and Entity=@entity and Uuid=@valueId', {\n\t\t\t\t\tentity: item.Entity,\n\t\t\t\t\tvalueId: r.Id\n\t\t\t\t});\n\t\t\t}, function(a) {\n\t\t\t\tdbInsert('pickvalue', 'Uuid,TenantId,Entity,Field,Value,Text,Sorting', '@id, @tenantId, @entity, @field, @value, @text, @sorting', {\n\t\t\t\t\tid: a.Id,\n\t\t\t\t\ttenantId: tenantId,\n\t\t\t\t\tentity: item.Entity,\n\t\t\t\t\tfield: a.Field,\n\t\t\t\t\tvalue: a.Value,\n\t\t\t\t\ttext: a.Text,\n\t\t\t\t\tsorting: a.Sorting\n\t\t\t\t});\n\t\t\t}, function(u) {\n\t\t\t\tdbUpdate('pickvalue', 'field=@field,value=@value,text=@text,sorting=@sorting', 'TenantId=@tenantId and Uuid=@id', {\n\t\t\t\t\tid: u.Id,\n\t\t\t\t\ttenantId: tenantId,\n\t\t\t\t\tfield: u.Field,\n\t\t\t\t\tvalue: u.Value,\n\t\t\t\t\ttext: u.Text,\n\t\t\t\t\tsorting: u.Sorting\n\t\t\t\t});\n\t\t\t}\n\t);\n}\n\nif (item.CharacteristicAssociations) {\n\tvar existingCharacteristics = getList('characteristicassociation', 'Uuid as Id,CharacteristicGroupId,Active,Required,Sorting,CharacteristicId,Readonly,Identifier,Type,Length', 'TenantId=@tenantId and Entity=@Entity', item);\n\n\tmergeAssociations(existingCharacteristics, item.CharacteristicAssociations, function(c) {\n\t\t\t\treturn c.Id;\n\t\t\t}, function(r) {\n\t\t\t\tdbDelete('characteristicassociation', 'TenantId=@tenantId and Entity=@entity and Uuid=@id', {\n\t\t\t\t\tentity: item.Entity,\n\t\t\t\t\tid: r.Id\n\t\t\t\t});\n\t\t\t}, function(a) {\n\t\t\t\tdbInsert('characteristicassociation', 'Uuid,TenantId,Entity,CharacteristicGroupId,Active,Required,Sorting,CharacteristicId,Readonly,Identifier,Type,Length', '@id, @tenantId, @entity, @characteristicGroupId, @active, @required, @sorting, @characteristicId, @readonly, @identifier, @type, @length', {\n\t\t\t\t\tid: a.Id,\n\t\t\t\t\ttenantId: tenantId,\n\t\t\t\t\tentity: item.Entity,\n\t\t\t\t\tcharacteristicGroupId: a.CharacteristicGroupId,\n\t\t\t\t\tactive: a.Active,\n\t\t\t\t\trequired: a.Required,\n\t\t\t\t\tsorting: a.Sorting,\n\t\t\t\t\tcharacteristicId: a.CharacteristicId,\n\t\t\t\t\treadonly: a.Readonly,\n\t\t\t\t\tidentifier: a.Identifier,\n\t\t\t\t\ttype: a.Type,\n\t\t\t\t\tlength: a.Length,\n\t\t\t\t});\n\t\t\t}, function(u) {\n\t\t\t\tdbUpdate('characteristicassociation', 'CharacteristicGroupId=@characteristicGroupId,Active=@active,Required=@required,Sorting=@sorting,CharacteristicId=@characteristicId,Readonly=@readonly,Identifier=@identifier,Type=@type,Length=@length', 'TenantId=@tenantId and Uuid=@id', {\n\t\t\t\t\tid: u.Id,\n\t\t\t\t\ttenantId: tenantId,\n\t\t\t\t\tcharacteristicGroupId: u.CharacteristicGroupId,\n\t\t\t\t\tactive: u.Active,\n\t\t\t\t\trequired: u.Required,\n\t\t\t\t\tsorting: u.Sorting,\n\t\t\t\t\tcharacteristicId: u.CharacteristicId,\n\t\t\t\t\treadonly: u.Readonly,\n\t\t\t\t\tidentifier: u.Identifier,\n\t\t\t\t\ttype: u.Type,\n\t\t\t\t\tlength: u.Length,\n\t\t\t\t});\n\t\t\t}\n\t);\n\t\n\t//updateEntitySchema(item.Application, item.Entity);\n}\n\nfunction mapDatabaseColumnType(intType) {\n  switch (intType) {\n    case 0:\n      return 'bit';\n    case 1:\n      return 'int';\n    case 2:\n      return 'decimal';\n    case 3:\n      return 'float';\n    case 4:\n      return 'date';\n    case 5:\n      return 'datetime';\n    case 6:\n      return 'nvarchar';\n    case 7:\n      return 'nvarchar';\n    case 8:\n      return 'uniqueidentifier';\n    case 9:\n      return 'int';\n    case 10:\n      return 'time';\n  }\n\n  return 'unknown';\n}\n\nif ('primary' === identifier) {    \n    var indices = JSON.parse(item.Indices ?? '[]');\n  \n    if (item.GeneratedSchema) {\n      var serializedProviderModel = JSON.stringify({\n        tableName: item.Entity,\n        noIdentity: item.NoIdentity,\n        customColumns: item.CharacteristicAssociations ? item.CharacteristicAssociations.map(c => ({\n          columnName: c.Identifier,\n          columnType: mapDatabaseColumnType(c.Type),\n          maxLength: c.Length,\n          nullable: !c.Required\n        })) : [],\n        customIndexes: indices.map(idx => ({\n          indexName: null,\n          unique: idx.unique,\n          columnNames: idx.members\n        }))\n      });\n      \n      entitySave('meta', 'entity', 'providermodel', { tenantId: tenantId, Id: item.Id, ProviderModelDefinition: serializedProviderModel });  \n\n      updateEntitySchema(serializedProviderModel);\n    } else {\n      entitySave('meta', 'entity', 'providermodel', { tenantId: tenantId, Id: item.Id, ProviderModelDefinition: null });\n    }\n    \n}\n\npurgeCache('entity', item.Id);\npurgeCache('entity', item.Entity);",
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": "{extendedRightsCheck:'',initNewDetailItem:\"if (dataMember === 'CharacteristicAssociations' || dataMember === 'Rights' || dataMember === 'EditableStates' || dataMember === 'Pickvalues') {\\n    detailItem.Id = util.uuid();\\n    detailItem.TenantId = item.TenantId;\\n    detailItem.Entity = item.Entity;\\n    \\n    if (dataMember === 'CharacteristicAssociations') {\\n        detailItem.Active = false;\\n        detailItem.Required = false;\\n        detailItem.Readonly = false;\\n        detailItem.Sorting = 0;\\n    }\\n} else if (dataMember === 'EditableGridLayout') {\\n    detailItem.allowMultiselect = false;\\n    detailItem.columns = [];\\n    detailItem.summaries = [];\\n} else if (dataMember === 'EditableEditLayout') {\\n    detailItem.items = [];\\n} else if (dataMember === 'EditableIndices') {\\n\\tdetailItem.unique = false;\\n  \\tdetailItem.members = [];\\n} else if (dataMember === 'EditableCustomFunctions') {\\n    detailItem.options = {};\\n}\",detailGridCellPreparing:'',rightsParamForHead:'',rightsParamForItem:'',prepareCustomParam:'',prepareGridLayout:'',prepareEditLayout:'',editorPreparing:\"if (identifier === 'entityright') {\\n    layoutItem.itemoptions = {   \\n        uniqueKey: item.Id + '_entityright',\\n        query: 'entity',\\n        layout: 'entity',\\n        fetchParams: {\\n          \\tentity: item.Entity\\n        },\\n        headParams: {\\n            entity: item.Entity\\n        },\\n        customParam: {            \\n            entity: item.Entity\\n        }\\n    }\\n} \\n\\nif (identifier === 'pickvalue') {\\n    layoutItem.itemoptions = {   \\n        uniqueKey: item.Id + '_pickvalue',\\n        query: 'entity',\\n        layout: 'entity',\\n        fetchParams: {\\n          \\tentity: item.Entity\\n        },\\n        headParams: {\\n            entity: item.Entity\\n        },\\n        customParam: {            \\n            entity: item.Entity\\n        }\\n    }\\n}\\n\\nif (identifier === 'processingstate') {\\n    layoutItem.itemoptions = {   \\n        uniqueKey: item.Id + '_processingstate',\\n        query: 'entity',\\n        layout: 'entity',\\n        fetchParams: {\\n          \\tentity: item.Entity\\n        },\\n        headParams: {\\n            entity: item.Entity\\n        },\\n        customParam: {            \\n            entity: item.Entity\\n        }\\n    }\\n}\",editorInitialized:'',editorValueChanged:'',editorEntered:'',editorValidating:'',editorEvent:'',detailGridRowValidating:'',paramsInitialized:'',paramEditorInitialized:'',paramEditorValueChanged:'',paramEditorEvent:'',prepareMaterializedEditItem:'',evaluateCustomFunction:\"if (identifier === 'providermodel') {  \\n  executeCallback({\\n    Id: param.id,\\n    ProviderModelDefinition: util.stringify(param.providerModelDefinition)\\n  });\\n}\",prepareCustomFunction:\"if (identifier === 'providermodel' && selection.length === 1) {  \\n  if (!selection[0].GeneratedSchema) {\\n    messageCallback('Tabelle nicht automatisch generiert');\\n    return;\\n  }\\n  \\n  var parsedProviderModelDefinition = util.parse(selection[0].ProviderModelDefinition ?? '{}');  \\n    \\n  executeCallback({\\n    id: selection[0].Id,\\n    providerModelDefinition: parsedProviderModelDefinition\\n  });  \\n}\"}",
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Objektdefinitionen',allowMultiselect:true,columns:[{type:'text',dataMember:'Application',caption:'Modul'},{type:'text',dataMember:'Entity',caption:'Objekt'},{type:'text',dataMember:'DisplayName',caption:'Anzeigename'},{type:'text',dataMember:'BaseUrl',caption:'Basis-URL'},{type:'bool',dataMember:'Meta',caption:'Metadaten'},{__KEY__:'11a13645-dfe5-e3bf-b1b9-acbc7353a472',type:'bool',dataMember:'GeneratedSchema',caption:'Tabelle automatisch generieren'}],summaries:[{dataMember:'Entity',summaryType:'count',groupSummary:true,totalSummary:true}],details:''}]",
    "EditLayout": "[{identifier:'sql',colCount:1,items:[{type:'sql',options:{dataMember:'query',height:'100%'}}]},{identifier:'json',colCount:1,items:[{type:'json',options:{dataMember:'definition',height:'100%'}}]},{identifier:'editlayoutitems',colCount:1,items:[{type:'json',options:{dataMember:'items',height:'100%'}}]},{identifier:'gridlayoutdetails',colCount:1,items:[{type:'json',options:{dataMember:'details',height:'100%'}}]},{identifier:'staticpickvalues',colCount:1,items:[{type:'detailgrid',options:{width:'auto',itemoptions:{add:true,edit:true,delete:true,columns:[{type:'number',dataMember:'Value',caption:'Wert',editable:true},{type:'text',dataMember:'Text',caption:'Text',editable:true}]}}}]},{identifier:'gridlayoutcolumns',colCount:1,items:[{type:'detailgrid',options:{dataMember:'columns',width:'auto',height:'100%',itemoptions:{add:true,update:true,delete:true,showSource:true,columns:[{type:'number',dataMember:'position',caption:'Position',editable:true,sorting:'asc'},{type:'number',dataMember:'hidingPriority',caption:'Ausblende-Priorität',editable:true},{type:'staticlookup',dataMember:'type',caption:'Art',editable:true,displayExpr:'Text',valueExpr:'Value',items:[{Value:'text',Text:'Zeichenfolge'},{Value:'bool',Text:'Ja/Nein'},{Value:'number',Text:'Zahl'},{Value:'date',Text:'Datum'},{Value:'datetime',Text:'Datum/Uhrzeit'},{Value:'lookup',Text:'Auswahlliste'},{Value:'pickvalue',Text:'Auswahlwert'},{Value:'staticlookup',Text:'Auswahlliste aus festen Werten'}]},{type:'text',dataMember:'dataMember',caption:'Merkmal',editable:true},{type:'text',dataMember:'caption',caption:'Überschrift',editable:true},{type:'text',dataMember:'lookup',caption:'Auswahlliste',editable:true},{type:'text',dataMember:'lookupParam',caption:'Parameter für Auswahlliste',editable:true},{type:'text',dataMember:'width',caption:'Breite',editable:true},{type:'number',dataMember:'precision',caption:'Nachkommastellen',editable:true},{type:'staticlookup',dataMember:'fixedPosition',caption:'Fixiert',editable:true,displayExpr:'Text',valueExpr:'Value',items:[{Value:null,Text:'Nein'},{Value:'left',Text:'Links'},{Value:'right',Text:'Rechts'}]},{type:'bool',dataMember:'visible',caption:'Sichtbar',editable:true},{type:'bool',dataMember:'editable',caption:'Bearbeitbar',editable:true},{type:'staticlookup',dataMember:'sorting',caption:'Sortierung',editable:true,displayExpr:'Text',valueExpr:'Value',items:[{Value:null,Text:'Keine'},{Value:'asc',Text:'Aufsteigend'},{Value:'desc',Text:'Absteigend'}]},{type:'text',dataMember:'editFunction',caption:'Funktion für Bearbeitung',editable:true},{type:'popup',dataMember:'items',caption:'Auswahlwerte',editable:true,popuplayout:'staticpickvalues'}]}}}]},{identifier:'gridlayoutsummary',colCount:1,items:[{type:'detailgrid',options:{dataMember:'summaries',width:'auto',itemoptions:{add:true,update:true,delete:true,columns:[{type:'text',dataMember:'dataMember',caption:'Spalte',editable:true},{type:'staticlookup',dataMember:'summaryType',caption:'Aggregat',editable:true,items:[{Value:'count',Text:'Anzahl'},{Value:'sum',Text:'Summe'}]},{type:'bool',dataMember:'groupSummary',caption:'Gruppe ausgeben',editable:true},{type:'bool',dataMember:'totalSummary',caption:'Gesamt ausgeben',editable:true}]}}}]},{identifier:'primary',colCount:4,colCountByScreen:{sm:1,lg:1},fullscreen:true,items:[{type:'text',colSpan:1,options:{dataMember:'Application',caption:'Modul',required:true}},{type:'text',colSpan:1,options:{dataMember:'Entity',caption:'Objekt',required:true}},{type:'text',colSpan:2,options:{dataMember:'DisplayName',caption:'Anzeigename',required:true}},{type:'text',colSpan:3,options:{dataMember:'BaseUrl',caption:'Basis-Url'}},{type:'bool',colSpan:1,options:{dataMember:'Meta',caption:'Metadaten'}},{type:'tabs',colSpan:4,options:{},items:[{type:'tab',options:{caption:'Benutzeroberfläche'},items:[{type:'tabs',options:{},items:[{type:'tab',options:{caption:'Auswahlabfragen'},items:[{type:'detailgrid',options:{dataMember:'EditableLookups',caption:'Auswahllisten für Abfragen',itemoptions:{add:true,update:true,delete:true,columns:[{type:'lookup',dataMember:'id',caption:'Definition',editable:true,lookup:'lookupLookup'},{type:'text',dataMember:'identifier',caption:'Eindeutiger Bezeichner',editable:true},{type:'text',dataMember:'valueMember',caption:'Spalte für Wert',editable:true},{type:'text',dataMember:'displayMember',caption:'Spalte für Anzeige',editable:true},{type:'staticlookup',dataMember:'type',caption:'Abfrageart',editable:true,displayExpr:'text',valueExpr:'value',items:[{value:0,text:'Auswahlliste'},{value:1,text:'Autovervollständigung'}]},{type:'bool',dataMember:'hasParam',caption:'Benötigt Parameter',editable:true}]}}},{type:'detailgrid',options:{dataMember:'EditablePicklists',caption:'Auswahllisten für Werte',itemoptions:{add:true,update:true,delete:true,columns:[{type:'text',dataMember:'identifier',caption:'Eindeutige Bezeichnung',editable:true,required:true},{type:'text',dataMember:'entity',caption:'Objektdefinition',editable:true},{type:'text',dataMember:'field',caption:'Merkmal',editable:true}]}}}]},{type:'tab',options:{caption:'Listen'},items:[{type:'detailgrid',options:{dataMember:'EditableGridLayout',itemoptions:{add:true,update:true,delete:true,columns:[{type:'text',dataMember:'identifier',caption:'Eindeutige Bezeichnung',editable:true,required:true},{type:'text',dataMember:'editLayout',caption:'Layout für Bearbeitung',editable:true},{type:'text',dataMember:'title',caption:'Titel',editable:true},{type:'bool',dataMember:'allowMultiselect',caption:'Mehrfachauswahl möglich',editable:true},{type:'bool',dataMember:'allowEditing',caption:'Bearbeitung in Zeile',editable:true},{type:'bool',dataMember:'allowSearchByBarcode',caption:'Suche nach QR/Barcode',editable:true},{type:'popup',dataMember:'columns',caption:'Spalten',editable:true,popuplayout:'gridlayoutcolumns'},{type:'popup',dataMember:'summaries',caption:'Zusammenfassung',editable:true,popuplayout:'gridlayoutsummary'},{type:'popup',dataMember:'details',caption:'Detailbereich',editable:true,popuplayout:'gridlayoutdetails'}]}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.prepareGridLayout',caption:'Listenlayout vorbereiten',height:'100%',itemoptions:{prefixCode:['function prepareGridLayout(lookups, customParam, util, gridLayout) {'],suffixCode:['}']}}}]},{type:'tab',options:{caption:'Formulare'},items:[{type:'detailgrid',options:{dataMember:'EditableEditLayout',itemoptions:{add:true,update:true,delete:true,columns:[{type:'text',dataMember:'identifier',caption:'Eindeutige Bezeichnung',editable:true,required:true},{type:'number',dataMember:'colCount',caption:'Anzahl Spalten',editable:true},{type:'bool',dataMember:'fullscreen',caption:'Vollbild',editable:true},{type:'popup',dataMember:'items',caption:'Elemente',editable:true,popuplayout:'editlayoutitems'}]}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.prepareEditLayout',caption:'Formularlayout vorbereiten',height:'100%',itemoptions:{prefixCode:['function prepareEditLayout(mode, lookups, customParam, util, editLayout) {'],suffixCode:['}']}}}]},{type:'tab',options:{caption:'Vorlagen'},items:[{type:'detailgrid',options:{dataMember:'EditableTemplates',caption:'Formularlayout-Vorlagen',itemoptions:{add:true,update:true,delete:true,columns:[{type:'text',dataMember:'identifier',caption:'Eindeutige Kennung',editable:true},{type:'popup',dataMember:'definition',caption:'Definition',editable:true,popuplayout:'json'}]}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.prepareMaterializedEditItem',caption:'Aus Template erzeugtes Formularelement vorbereiten',height:'100%',itemoptions:{prefixCode:['function prepareMaterializedEditItem(mode, lookups, customParam, util, editLayout, scope, identifier, materializedItem) {'],suffixCode:['}']}}}]}]}]},{type:'tab',options:{caption:'Rechte'},items:[{type:'javascript',options:{dataMember:'EditableCustomScripts.extendedRightsCheck',caption:'Erweiterte Rechteabfrage',height:'100%',itemoptions:{prefixCode:['function rightsCheck(userinfo, application, entity, readOnly, right, param, result) {'],suffixCode:['}']}}},{type:'entitygrid',options:{dataMember:'entityright',query:'entity',layout:'entity',height:'auto'}}]},{type:'tab',options:{caption:'Logik Frontend'},items:[{type:'javascript',options:{dataMember:'EditableCustomScripts.commonUtils',caption:'Gemeinsam verwendete Funktionen',height:'100%'}},{type:'javascript',options:{dataMember:'ItemMappingScript',caption:'Transformation (lesen)',height:'100%',itemoptions:{prefixCode:['function itemMappingScript(item, customParam, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'ItemReverseMappingScript',caption:'Transformation (schreiben)',height:'100%',itemoptions:{prefixCode:['function itemReverseMappingScript(item, customParam, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.rightsParamForHead',caption:'Parameter für Rechteabfrage (Kopf)',height:'100%',itemoptions:{prefixCode:['function rightsParamForHead(customParam) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.rightsParamForItem',caption:'Parameter für Rechteabfrage (Datensatz)',height:'100%',itemoptions:{prefixCode:['function rightsParamForItem(item, customParam) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.prepareCustomParam',caption:'Objektspezifischen Parameter vorbereiten',height:'100%',itemoptions:{prefixCode:['function prepareCustomParam(lookups, util, callback) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.editorPreparing',caption:'Editor vorbereiten',height:'100%',itemoptions:{prefixCode:['function editorPreparing(mode, item, layoutItem, identifier, lookups, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.editorInitialized',caption:'Editor initialisiert',height:'100%',itemoptions:{prefixCode:['function editorInitialized(mode, item, editUtil, identifier, lookups, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.editorValueChanged',caption:'Editor Wert verändert',height:'100%',itemoptions:{prefixCode:['function editorValueChanged(item, editUtil, identifier, value, lookups, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.editorEntered',caption:'Editor betreten',height:'100%',itemoptions:{prefixCode:['function editorEntered(mode, item, editUtil, identifier, lookups, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.editorValidating',caption:'Editor validieren',height:'100%',itemoptions:{prefixCode:['function editorValidating(item, editUtil, identifier, value, validation, lookups, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.editorEvent',caption:'Editor Ereignis',height:'100%',itemoptions:{prefixCode:['function editorEvent(item, editUtil, identifier, event, lookups, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.interactionKeyboardLine',caption:'Tastaturzeileneingabe von extern',height:'100%',itemoptions:{prefixCode:['function interactionKeyboardLine(item, editUtil, value, lookups, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.detailGridCellPreparing',caption:'Detail-Zelle vorbereiten',height:'100%',itemoptions:{prefixCode:['function detailGridCellPreparing(mode, item, detailItem, identifier, options, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.detailGridRowValidating',caption:'Detail-Zeile validieren',height:'100%',itemoptions:{prefixCode:['function detailGridRowValidating(mode, item, detailItem, identifier, util) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.initNewDetailItem',caption:'Neue Detail-Instanz initialisieren',height:'100%',itemoptions:{prefixCode:['function initNewDetailItem(dataMember, item, detailItem, util) {'],suffixCode:['}']}}}]},{type:'tab',options:{caption:'Logik Backend'},items:[{type:'detailgrid',options:{dataMember:'EditableListQueries',caption:'Abfragen für Listen',itemoptions:{add:true,update:true,delete:true,columns:[{type:'text',dataMember:'identifier',caption:'Eindeutige Kennung',editable:true},{type:'popup',dataMember:'query',caption:'Abfrage',editable:true,popuplayout:'sql'}]}}},{type:'javascript',options:{dataMember:'ListScript',caption:'Skript für Einträge einer Liste',height:'100%'}},{type:'detailgrid',options:{dataMember:'EditableByIdQueries',caption:'Abfragen für Details zu einem bestehenden Datensatz',itemoptions:{add:true,update:true,delete:true,columns:[{type:'text',dataMember:'identifier',caption:'Eindeutige Kennung',editable:true},{type:'popup',dataMember:'query',caption:'Abfrage',editable:true,popuplayout:'sql'}]}}},{type:'javascript',options:{dataMember:'ByIdScript',caption:'Skript für Details zu einem Datensatz',height:'100%'}},{type:'sql',options:{dataMember:'NewQuery',caption:'Abfrage für Details zu einem neuen Datensatz',height:'100%'}},{type:'javascript',options:{dataMember:'BeforeSaveScript',caption:'Skript vor dem Speichern',height:'100%'}},{type:'detailgrid',options:{dataMember:'EditableSaveStatements',caption:'Statements zum Speichern',itemoptions:{add:true,update:true,delete:true,columns:[{type:'text',dataMember:'identifier',caption:'Eindeutige Kennung',editable:true},{type:'popup',dataMember:'query',caption:'Statement',editable:true,popuplayout:'sql'}]}}},{type:'javascript',options:{dataMember:'SaveScript',caption:'Skript zum Speichern',height:'100%'}},{type:'sql',options:{dataMember:'RemoveStatement',caption:'Statement zum Löschen',height:'100%'}},{type:'javascript',options:{dataMember:'RemovePreliminaryCheckScript',caption:'Skript für Vorabprüfung Löschen',height:'100%'}},{type:'javascript',options:{dataMember:'RemoveScript',caption:'Skript zum Löschen',height:'100%'}}]},{type:'tab',colCount:2,options:{caption:'Datenschema'},items:[{type:'bool',options:{dataMember:'GeneratedSchema',caption:'Tabelle automatisch generieren'}},{type:'bool',options:{dataMember:'NoIdentity',caption:'Zuordnungstabelle ohne eigene Identität'}},{type:'detailgrid',colSpan:2,options:{dataMember:'CharacteristicAssociations',caption:'Merkmale',itemoptions:{add:true,update:true,delete:true,columns:[{type:'staticlookup',dataMember:'Type',caption:'Art',editable:true,displayExpr:'Text',valueExpr:'Value',items:[{Value:0,Text:'Ja/Nein'},{Value:1,Text:'Ganzzahl'},{Value:2,Text:'Währung'},{Value:3,Text:'Kommazahl'},{Value:4,Text:'Datum'},{Value:5,Text:'Datum/Uhrzeit'},{Value:6,Text:'Textzeile'},{Value:7,Text:'Mehrzeiliger Text'},{Value:8,Text:'Auswahlliste'},{Value:9,Text:'Auswahlwert'},{Value:10,Text:'Zeitspanne'}]},{type:'text',dataMember:'Identifier',caption:'Kennung',editable:true},{type:'number',dataMember:'Length',caption:'Länge',editable:true},{type:'bool',dataMember:'Required',caption:'Pflichtangabe',editable:true}]}}},{type:'detailgrid',colSpan:2,options:{dataMember:'EditableIndices',caption:'Indices',itemoptions:{add:true,update:true,delete:true,columns:[{type:'bool',dataMember:'unique',caption:'Eindeutig',editable:true},{type:'staticmultilookup',dataMember:'members',caption:'Merkmale',displayExpr:'Identifier',valueExpr:'Identifier',editable:true,lookupMember:'CharacteristicAssociations'}]}}}]},{type:'tab',options:{caption:'Merkmalswerte'},items:[{type:'entitygrid',options:{dataMember:'pickvalue',query:'entity',layout:'entity',height:'auto'}}]},{type:'tab',options:{caption:'Funktionen'},items:[{type:'detailgrid',options:{dataMember:'EditableCustomFunctions',caption:'Funktionen',itemoptions:{add:true,update:true,delete:true,showSource:true,columns:[{type:'lookup',dataMember:'entity',caption:'Externe Objektdefinition',editable:true,lookup:'entityIdentifierLookup'},{type:'text',dataMember:'id',caption:'Eindeutige Kennung',editable:true},{type:'staticlookup',dataMember:'type',caption:'Art',items:[{Value:'add',Text:'Anlegen'},{Value:'edit',Text:'Bearbeiten'},{Value:'default_add',Text:'Anlegen (Standard)'},{Value:'default_view',Text:'Anzeigen (Standard)'},{Value:'default_edit',Text:'Bearbeiten (Standard)'},{Value:'external',Text:'Extern'},{Value:'import',Text:'Import'},{Value:'export',Text:'Export'}],editable:true},{type:'text',dataMember:'text',caption:'Bezeichnung',editable:true},{type:'text',dataMember:'icon',caption:'Symbol',editable:true},{type:'bool',dataMember:'multi',caption:'Mehrfachauswahl zugelassen',editable:true},{type:'bool',dataMember:'supportContinue',caption:'Fortsetzen zugelassen',editable:true},{type:'bool',dataMember:'externalEditor',caption:'Externer Editor',editable:true},{type:'text',dataMember:'editLayout',caption:'Layout',editable:true},{type:'popup',dataMember:'options',caption:'Optionen',editable:true,popuplayout:'customfunctionoptions'}]}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.prepareCustomFunction',caption:'Funktion vorbereiten',height:'100%',itemoptions:{prefixCode:['function prepareCustomFunction(identifier, lookups, util, executeCallback, messageCallback, params, selection) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.evaluateCustomFunction',caption:'Funktion nachbereiten',height:'100%',itemoptions:{prefixCode:['function evaluateCustomFunction(identifier, continueAfterSave, editUtil, lookups, util, param, saveCallback, messageCallback) {'],suffixCode:['}']}}}]},{type:'tab',colCount:2,options:{caption:'Status-Verarbeitung'},items:[{type:'text',options:{dataMember:'StateColumn',caption:'Spalte für Statuswert'}},{type:'text',options:{dataMember:'ScalarValueQuery',caption:'Abfrage für einzelnen Spaltenwert bei Statusprüfung'}},{type:'javascript',colSpan:2,options:{dataMember:'StateAllowedScript',caption:'Script für Statusberechtigung',height:'100%'}},{type:'entitygrid',colSpan:2,options:{dataMember:'processingstate',query:'entity',layout:'entity',height:'auto'}}]}]}]},{__KEY__:'dbeefc87-5b67-5b9b-13a2-d261353ed769',items:[{type:'json',options:{dataMember:'options',height:'100%'}}],identifier:'customfunctionoptions',colCount:1},{__KEY__:'6be90758-9b12-29f3-412f-8cccd9b381c2',items:[{type:'text',options:{dataMember:'providerModelDefinition.tableName',caption:'Name der Tabelle'}},{type:'bool',options:{dataMember:'providerModelDefinition.noIdentity',caption:'Zuordnungstabelle ohne eigene Identität'}},{type:'detailgrid',colSpan:2,options:{dataMember:'providerModelDefinition.customColumns',caption:'Merkmale',itemoptions:{add:true,update:true,delete:true,columns:[{type:'staticlookup',dataMember:'columnType',caption:'Art',editable:true,displayExpr:'Text',valueExpr:'Value',items:[{Value:'bit',Text:'Ja/Nein'},{Value:'int',Text:'Ganzzahl'},{Value:'decimal',Text:'Währung'},{Value:'float',Text:'Kommazahl'},{Value:'date',Text:'Datum'},{Value:'datetime',Text:'Datum/Uhrzeit'},{Value:'nvarchar',Text:'Textzeile'},{Value:'text',Text:'Mehrzeiliger Text'},{Value:'uniqueidentifier',Text:'Auswahlliste'},{Value:'int',Text:'Auswahlwert'},{Value:'time',Text:'Zeitspanne'}]},{type:'text',dataMember:'columnName',caption:'Kennung',editable:true},{type:'number',dataMember:'maxLength',caption:'Länge',editable:true},{type:'bool',dataMember:'nullable',caption:'Keine Pflichtangabe',editable:true}]}}},{type:'detailgrid',colSpan:2,options:{dataMember:'providerModelDefinition.customIndexes',caption:'Indices',itemoptions:{add:true,update:true,delete:true,columns:[{type:'bool',dataMember:'unique',caption:'Eindeutig',editable:true},{type:'staticmultilookup',dataMember:'columnNames',caption:'Merkmale',displayExpr:'columnName',valueExpr:'columnName',editable:true,lookupMember:'customColumns'}]}}}],identifier:'providermodel',colCount:2},{__KEY__:'753c6be9-bb3d-756a-b902-9dc13a4d7995',items:[{type:'entitygrid',options:{dataMember:'pickvalue',query:'entity',height:'auto'}}],identifier:'pickvalues',colCount:1}]",
    "CustomFunctions": "[{id:'exportjson',type:'export',text:'Exportieren',icon:'bi bi-download',multi:true,options:{format:'json'}},{id:'importjson',type:'import',text:'Importieren',icon:'bi bi-upload',options:{format:'json'}},{__KEY__:'7d03b5fe-bbc9-11d7-ba05-844bee337c55',options:{},id:'providermodel',type:'edit',text:'Datenschema',icon:'bi bi-pencil',multi:false,supportContinue:false,externalEditor:false,editLayout:'providermodel'},{__KEY__:'838b6a82-6845-5ef6-3386-220e1206d893',options:{},id:'pickvalues',type:'edit',text:'Auswahlwerte',icon:'bi bi-pencil',multi:false,supportContinue:false,externalEditor:false,editLayout:'pickvalues'}]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[{__KEY__:'1702227d-d89c-e1a0-9ab8-64e283eea3ee',definition:\"{\\n\\ttype: 'tab',\\n\\toptions: {\\n\\t\\tcaption: 'Datenschema',\\n\\t},\\n\\titems: [\\n\\t\\t{\\n\\t\\t\\ttype: 'detailgrid',\\n\\t\\t\\toptions: {\\n\\t\\t\\t\\tdataMember: 'CharacteristicAssociations',\\n\\t\\t\\t\\titemoptions: {\\n\\t\\t\\t\\t\\tadd: true,\\n\\t\\t\\t\\t\\tupdate: true,\\n\\t\\t\\t\\t\\tdelete: true,\\n\\t\\t\\t\\t\\tcolumns: [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'lookup',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'CharacteristicId',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Merkmal',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t\\tlookup: 'characteristicLookup',\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'staticlookup',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'Type',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Art',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t\\tdisplayExpr: 'Text',\\n\\t\\t\\t\\t\\t\\t\\tvalueExpr: 'Value',\\n\\t\\t\\t\\t\\t\\t\\titems: [\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 0,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Ja/Nein',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 1,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Ganzzahl',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 2,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Währung',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 3,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Kommazahl',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 4,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Datum',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 5,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Datum/Uhrzeit',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 6,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Textzeile',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 7,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Mehrzeiliger Text',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 8,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Auswahlliste',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 9,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Auswahlwert',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tValue: 10,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tText: 'Zeitspanne',\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'text',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'Identifier',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Kennung',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'number',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'Length',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Länge',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'bool',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'Active',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Aktiv',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'bool',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'Required',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Pflichtangabe',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'bool',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'Readonly',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Schreibgeschützt',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'number',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'Sorting',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Sortierung',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t},\\n\\t\\t{\\n\\t\\t\\ttype: 'detailgrid',\\n\\t\\t\\toptions: {\\n\\t\\t\\t\\tdataMember: 'EditableIndices',\\n\\t\\t\\t\\tcaption: 'Indices',\\n\\t\\t\\t\\titemoptions: {\\n\\t\\t\\t\\t\\tadd: true,\\n\\t\\t\\t\\t\\tupdate: true,\\n\\t\\t\\t\\t\\tdelete: true,\\n\\t\\t\\t\\t\\tcolumns: [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'text',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'identifier',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Eindeutige Kennung',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'bool',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'unique',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Eindeutig',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\ttype: 'staticmultilookup',\\n\\t\\t\\t\\t\\t\\t\\tdataMember: 'members',\\n\\t\\t\\t\\t\\t\\t\\tcaption: 'Merkmale',\\n\\t\\t\\t\\t\\t\\t\\tdisplayExpr: 'Identifier',\\n\\t\\t\\t\\t\\t\\t\\tvalueExpr: 'Identifier',\\n\\t\\t\\t\\t\\t\\t\\teditable: true,\\n\\t\\t\\t\\t\\t\\t\\tlookupMember: 'CharacteristicAssociations',\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t},\\n\\t\\t\\t},\\n\\t\\t},\\n\\t],\\n}\",identifier:'schema'}]",
    "StateAllowedScript": "",
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "f4e23d39-f723-485b-b0ad-0b7462e911a8",
        "Entity": "entity",
        "Identifier": "meta.entity.view",
        "DisplayName": "Anzeigen",
        "Container": "entity"
      },
      {
        "Id": "df342656-da71-45e4-bd7c-1563d86f0717",
        "Entity": "entity",
        "Identifier": "meta.entity.add",
        "DisplayName": "Anlegen",
        "Container": "entity"
      },
      {
        "Id": "8eeab082-bd25-4673-8313-8f1e04ea79bf",
        "Entity": "entity",
        "Identifier": "meta.entity.delete",
        "DisplayName": "Löschen",
        "Container": "entity"
      },
      {
        "Id": "5a4ca93f-760c-4483-8f71-ba6d46e9fc5b",
        "Entity": "entity",
        "Identifier": "meta.entity.exportjson",
        "DisplayName": "Exportieren",
        "Container": "entity"
      },
      {
        "Id": "926ba456-9d62-48a6-9006-e409d05c3dd7",
        "Entity": "entity",
        "Identifier": "meta.entity.edit",
        "DisplayName": "Bearbeiten",
        "Container": "entity"
      },
      {
        "Id": "b7896296-b62c-4e9e-bf64-fe6808ead5a0",
        "Entity": "entity",
        "Identifier": "meta.entity.importjson",
        "DisplayName": "Importieren",
        "Container": "entity"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": []
  },
  {
    "Id": "7c49a11b-f38d-4c7b-aed9-20fe1b4b0d4b",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "entityright",
    "DisplayName": "Benutzerrechte",
    "BaseUrl": "{meta}entityright",
    "ItemMappingScript": null,
    "ItemReverseMappingScript": null,
    "ListQuery": "[{__KEY__:'266ec36f-dbb5-d61f-5648-d4076fd6b7d8',identifier:'primary',query:'select\\n  Uuid as Id,\\n  Entity,\\n  Identifier,\\n  DisplayName,\\n  Container\\nfrom entityright where TenantId=@tenantId\\norder by Entity, Identifier'},{__KEY__:'cd2e7627-ec7f-8e71-ca10-e0e2d1df1551',identifier:'entity',query:'select\\n  Uuid as Id,\\n  Entity,\\n  Identifier,\\n  DisplayName,\\n  Container\\nfrom entityright \\nwhere TenantId=@tenantId and Entity=@entity\\norder by Identifier'}]",
    "ByIdQuery": "[{__KEY__:'89417459-59da-2b9b-f127-ab3f8abe62ea',identifier:'primary',query:'select\\n  Uuid as Id,\\n  Entity,\\n  Identifier,\\n  DisplayName,\\n  Container\\nfrom entityright \\nwhere TenantId=@tenantId and Uuid=@Id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"select\nId = NEWID(),\nEntity = null,\nIdentifier = null,\nDisplayName = null,\nContainer = null\" }, { identifier: 'entity', query: \"select\nId = NEWID(),\nEntity = @entity,\nIdentifier = null,\nDisplayName = null,\nContainer = null\" }]",
    "ScalarValueQuery": null,
    "SaveStatement": "[{__KEY__:'7c14675e-afe6-3a03-86b0-24b7e312b271',identifier:'primary',query:'UPDATE entityright SET \\n  Entity = @Entity,  \\n  Identifier = @Identifier,\\n  DisplayName = @DisplayName,\\n  Container = @Container,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId = @tenantId and Uuid = @Id; \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO entityright (Uuid, TenantId, Entity, Identifier, DisplayName, Container, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @Entity, @Identifier, @DisplayName, @Container, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM entityright WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'}]",
    "RemoveStatement": "delete from entityright where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": null,
    "BeforeSaveScript": null,
    "SaveScript": null,
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": null,
    "GridLayout": "[{__KEY__:'71126afd-bb77-bea2-0770-f938a6063113',allowMultiselect:false,columns:[{position:'1',type:'lookup',caption:'Objektdefinition',dataMember:'Entity',lookup:'entityIdentifierLookup'},{position:'2',type:'text',dataMember:'Identifier',caption:'Eindeutige Kennung'},{position:'3',type:'text',dataMember:'DisplayName',caption:'Bezeichnung'},{position:'4',type:'text',dataMember:'Container',caption:'Gruppe für Erfassung'}],summaries:[],identifier:'primary',editLayout:'primary',title:'Benutzerrechte',allowEditing:false,allowSearchByBarcode:false},{__KEY__:'ca39ac63-4283-b26e-ca4a-d4891a95b24d',allowMultiselect:false,columns:[{position:'1',type:'text',dataMember:'Identifier',caption:'Eindeutige Kennung'},{position:'2',type:'text',dataMember:'DisplayName',caption:'Bezeichnung'},{position:'3',type:'text',dataMember:'Container',caption:'Gruppe für Erfassung'}],summaries:[],identifier:'entity',editLayout:'entity',title:'Benutzerrechte für Objektdefinition',allowEditing:false,allowSearchByBarcode:false}]",
    "EditLayout": "[{__KEY__:'f6bec91c-5a26-3124-1419-6c36149eed2f',items:[{type:'lookup',options:{dataMember:'Entity',caption:'Objektdefinition',lookup:'entityIdentifierLookup',required:true}},{type:'text',options:{dataMember:'Identifier',caption:'Eindeutige Kennung',required:true}},{type:'text',options:{dataMember:'DisplayName',caption:'Bezeichnung',required:true}},{type:'text',options:{dataMember:'Container',caption:'Gruppe für Erfassung',required:true}}],identifier:'primary',colCount:'1'},{__KEY__:'12b40979-0c1a-4780-6a58-1db1a6725cf8',items:[{type:'text',options:{dataMember:'Identifier',caption:'Eindeutige Kennung',required:true}},{type:'text',options:{dataMember:'DisplayName',caption:'Bezeichnung',required:true}},{type:'text',options:{dataMember:'Container',caption:'Gruppe für Erfassung',required:true}}],identifier:'entity',colCount:'1'}]",
    "CustomFunctions": "[]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "33d0471b-40fb-469d-bce1-63414b511f1b",
        "Entity": "entityright",
        "Identifier": "meta.entityright.add",
        "DisplayName": "Anlegen",
        "Container": "entityright"
      },
      {
        "Id": "3b5d692e-ddb2-42a1-9606-d61a482aca30",
        "Entity": "entityright",
        "Identifier": "meta.entityright.view",
        "DisplayName": "Anzeigen",
        "Container": "entityright"
      },
      {
        "Id": "5bc54ac4-74db-4981-bd62-d6132ba3df1f",
        "Entity": "entityright",
        "Identifier": "meta.entityright.edit",
        "DisplayName": "Bearbeiten",
        "Container": "entityright"
      },
      {
        "Id": "7e117740-dc1a-4b5f-8804-50e0b328feeb",
        "Entity": "entityright",
        "Identifier": "meta.entityright.delete",
        "DisplayName": "Löschen",
        "Container": "entityright"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": []
  },
  {
    "Id": "b596bd1c-3138-4315-8180-cde9cbb34036",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "job",
    "DisplayName": "Hintergrundaufträge",
    "BaseUrl": "{meta}job",
    "ItemMappingScript": null,
    "ItemReverseMappingScript": null,
    "ListQuery": "[{__KEY__:'5ffa3f47-829a-c1ae-b548-9dc8ca7054ce',identifier:'primary',query:'SELECT \\n  Uuid as Id, \\n  Scheduler,\\n  Identifier,\\n  Owner,\\n  Options,\\n  State,\\n  Result\\nFROM job\\nWHERE TenantId = @tenantId\\nORDER BY CreateStamp'}]",
    "ByIdQuery": "[{__KEY__:'259fc416-cdaa-7ee1-6b85-ea969757ce66',identifier:'primary',query:'SELECT \\n  Uuid as Id, \\n  Scheduler,\\n  Identifier,\\n  Owner,\\n  Options,\\n  State,\\n  Result\\nFROM job\\nWHERE TenantId = @tenantId and Uuid=@Id'},{__KEY__:'36b482eb-9979-3cd2-788c-a7843e917022',identifier:'plain',query:'SELECT \\n  Id,\\n  Uuid, \\n  TenantId,\\n  Scheduler,\\n  Identifier,\\n  Owner,\\n  Options,\\n  State,\\n  Result\\nFROM job\\nWHERE TenantId = @tenantId and Uuid=@Id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"SELECT Id=NEWID(), Scheduler=null, Identifier=null, Owner=null, Options='{}', State=0, Result=null\" }]",
    "ScalarValueQuery": null,
    "SaveStatement": "[{__KEY__:'291cceef-5ca4-e227-b772-326ba791ecb3',identifier:'primary',query:'UPDATE job SET \\n  Scheduler=@Scheduler,  \\n  Identifier=@Identifier, \\n  Owner=@Owner,\\n  Options=@Options,\\n  State=@State,\\n  Result=@Result,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId=@tenantId and Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO job (Uuid, TenantId, Scheduler, Identifier, Owner, Options, State, Result, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @Scheduler, @Identifier, @Owner, @Options, @State, @Result, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM job WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'},{__KEY__:'1da6062f-5e34-3462-bd16-d4a92606be7a',identifier:'create',query:'INSERT INTO job (Uuid, TenantId, Scheduler, Identifier, Owner, Options, State, CreatorId, CreateStamp) \\nSELECT @Id, @tenantId, @Scheduler, @Identifier, @Owner, @Options, 1, @claim_sub, GETDATE() \\nWHERE NOT EXISTS (SELECT * FROM job WHERE tenantId = @tenantId and Uuid = @Id) '},{__KEY__:'c2e678a1-49b5-14c2-831b-3174b5ddfa15',identifier:'update',query:'UPDATE job SET \\n  State=@State,\\n  Result=@Result,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId=@tenantId and Uuid = @Id;  '}]",
    "RemoveStatement": "delete from job where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": null,
    "BeforeSaveScript": null,
    "SaveScript": null,
    "Lookups": "[]",
    "Picklists": "[{__KEY__:'1d67bc5a-8cf7-2220-a138-536acfce37b8',identifier:'statePickValue',entity:'job',field:'State'}]",
    "CustomScripts": null,
    "GridLayout": "[{__KEY__:'d317d51d-a59e-02ce-84c1-35fd85b7e205',allowMultiselect:false,columns:[{__KEY__:'543a256d-6194-c515-a6e8-26ab3e711665',position:'1',type:'text',dataMember:'Scheduler',caption:'Modul'},{__KEY__:'2554aa4d-932d-43c9-5efc-7f5a762e8f26',position:'2',type:'text',dataMember:'Identifier',caption:'Job'},{__KEY__:'aa987169-530c-b535-2ad1-2a4ac6ba39c3',type:'pickvalue',dataMember:'State',caption:'Status',lookup:'statePickValue'},{__KEY__:'bac4a618-896d-98d1-aa4b-c6e136d0b258',type:'lookup',dataMember:'Owner',caption:'Eigentümer',lookup:'userLookup'}],summaries:[],identifier:'primary',editLayout:'primary',title:'Hintergrundaufgaben',allowEditing:false}]",
    "EditLayout": "[{__KEY__:'755d68c5-7922-d372-f1a6-72a8458fc7e8',items:[{type:'text',options:{dataMember:'Scheduler',caption:'Modul'}},{type:'text',options:{dataMember:'Identifier',caption:'Job'}},{type:'lookup',options:{dataMember:'State',caption:'Status',lookup:'statePickValue'}}],identifier:'primary',colCount:'1'}]",
    "CustomFunctions": "[]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "31c527f4-e5df-4d3a-ac9d-61198cf7a627",
        "Entity": "job",
        "Identifier": "meta.job.view",
        "DisplayName": "Anzeigen",
        "Container": "job"
      },
      {
        "Id": "2f0b8d20-43d3-431b-84ad-faf1302c4178",
        "Entity": "job",
        "Identifier": "meta.job.edit",
        "DisplayName": "Bearbeiten",
        "Container": "job"
      },
      {
        "Id": "49ed6fbf-deea-4cd0-8e43-448a05fbe508",
        "Entity": "job",
        "Identifier": "meta.job.add",
        "DisplayName": "Anlegen",
        "Container": "job"
      },
      {
        "Id": "e9eed979-bdb2-425d-8062-4112664ea047",
        "Entity": "job",
        "Identifier": "meta.job.delete",
        "DisplayName": "Löschen",
        "Container": "job"
      }
    ],
    "Pickvalues": [
      {
        "Id": "a30a2027-2ff6-4e78-a31b-906fbf8ab084",
        "Entity": "job",
        "Field": "State",
        "Value": 0,
        "Text": "Unbekannt",
        "Sorting": 0
      },
      {
        "Id": "600d7892-0042-4338-98a7-04af7f2fe4e6",
        "Entity": "job",
        "Field": "State",
        "Value": 1,
        "Text": "Warte auf Bearbeitung",
        "Sorting": 1
      },
      {
        "Id": "7ac08d81-ca69-45c4-91dd-9118f24d1015",
        "Entity": "job",
        "Field": "State",
        "Value": 5,
        "Text": "In Bearbeitung",
        "Sorting": 2
      },
      {
        "Id": "6d7e3511-d9c4-4589-a68d-b6acf8f1e972",
        "Entity": "job",
        "Field": "State",
        "Value": 10,
        "Text": "Abgeschlossen",
        "Sorting": 10
      },
      {
        "Id": "0b1e0078-af04-4e7b-ba0f-f495c798b49c",
        "Entity": "job",
        "Field": "State",
        "Value": 99,
        "Text": "Fehler",
        "Sorting": 99
      }
    ],
    "CharacteristicAssociations": []
  },
  {
    "Id": "63b0cbab-026a-41eb-b903-069cae0f8467",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "lookup",
    "DisplayName": "Auswahlliste",
    "BaseUrl": "{meta}lookup",
    "ItemMappingScript": "",
    "ItemReverseMappingScript": "",
    "ListQuery": "[{__KEY__:'bdccac7b-b337-648b-e9c6-f4824ba5557e',identifier:'primary',query:'SELECT Uuid as Id, Identifier, Name, Meta, Type, ByIdQuery, ListQuery, HasParam\\nFROM lookup\\nWHERE TenantId = @tenantId\\nORDER BY Identifier'},{__KEY__:'afa4326b-c7b7-2219-9c47-aa13915f4984',identifier:'exportjson',query:'SELECT \\n  Uuid as Id, \\n  Identifier, \\n  Name, \\n  Meta, \\n  Type, \\n  ByIdQuery, \\n  ListQuery, \\n  HasParam\\nFROM lookup\\nWHERE TenantId = @tenantId and Uuid in (@id)\\nORDER BY Identifier'}]",
    "ByIdQuery": "[{identifier:'primary',query:'SELECT Uuid as Id, Identifier, Name, Meta, Type, ByIdQuery, ListQuery, HasParam FROM lookup WHERE TenantId=@tenantId and Uuid = @id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"SELECT Id=NEWID(), Identifier=null, Name=null, Meta=0, Type=0, ByIdQuery=null, ListQuery=null, HasParam=0\" }]",
    "ScalarValueQuery": null,
    "SaveStatement": "[{identifier:'primary',query:'UPDATE lookup SET \\n  Identifier=@Identifier, \\n  Name=@Name, \\n  Meta=@Meta, \\n  Type=@Type, \\n  ByIdQuery=@ByIdQuery, \\n  ListQuery=@ListQuery, \\n  HasParam=@HasParam, \\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId=@tenantId and Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO lookup (Uuid, TenantId, Identifier, Name, Meta, Type, ByIdQuery, ListQuery, HasParam, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @Identifier, @Name, @Meta, @Type, @ByIdQuery, @ListQuery, @HasParam, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM lookup WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'}]",
    "RemoveStatement": "delete from lookup where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": "",
    "BeforeSaveScript": "",
    "SaveScript": "purgeCache('lookup', item.Id);\npurgeCache('lookup', item.Identifier);",
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": "{extendedRightsCheck:'',prepareGridLayout:'',prepareCustomParam:'',rightsParamForItem:'',editorInitialized:'',editorPreparing:'',rightsParamForHead:''}",
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Auswahllisten',allowMultiselect:true,columns:[{type:'text',dataMember:'Identifier',caption:'Kennung'},{type:'text',dataMember:'Name',caption:'Bezeichnung'},{type:'bool',dataMember:'Meta',caption:'Metadaten'}],summaries:[{dataMember:'Identifier',summaryType:'count',groupSummary:true,totalSummary:true}]}]",
    "EditLayout": "[{identifier:'primary',colCount:1,colCountByScreen:{sm:1,lg:1},fullscreen:false,items:[{type:'text',options:{dataMember:'Identifier',caption:'Kennung',required:true}},{type:'text',options:{dataMember:'Name',caption:'Bezeichnung',required:true}},{type:'bool',options:{dataMember:'Meta',caption:'Metadaten'}},{type:'sql',options:{dataMember:'ListQuery',caption:'Abfrage für Liste'}},{type:'sql',options:{dataMember:'ByIdQuery',caption:'Abfrage für einzelnes Element'}},{type:'staticlookup',options:{dataMember:'Type',caption:'Abfrageart',items:[{Value:0,Text:'Auswahlliste'},{Value:1,Text:'Autovervollständigung'}]}},{type:'bool',options:{dataMember:'HasParam',caption:'Abfrage benötigt Parameter'}}]}]",
    "CustomFunctions": "[{__KEY__:'1cfb1e87-308e-71e5-f975-b9fb9c3ae855',id:'exportjson',type:'export',text:'Exportieren',icon:'bi bi-download',multi:true,options:{format:'json'}},{__KEY__:'c3a5c4ac-e041-1d38-7e49-276e2d579816',id:'importjson',type:'import',text:'Importieren',icon:'bi bi-upload',options:{format:'json'}}]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "57837b57-67a6-4f14-8691-36e009bc5301",
        "Entity": "lookup",
        "Identifier": "meta.lookup.view",
        "DisplayName": "Anzeigen",
        "Container": "lookup"
      },
      {
        "Id": "93967991-5b72-44cd-b9c0-585ba9cd4543",
        "Entity": "lookup",
        "Identifier": "meta.lookup.add",
        "DisplayName": "Anlegen",
        "Container": "lookup"
      },
      {
        "Id": "c8728f32-968b-4312-8cd4-808b2de0db51",
        "Entity": "lookup",
        "Identifier": "meta.lookup.delete",
        "DisplayName": "Löschen",
        "Container": "lookup"
      },
      {
        "Id": "46232f29-52ea-4408-b052-ad5583140e39",
        "Entity": "lookup",
        "Identifier": "meta.lookup.edit",
        "DisplayName": "Bearbeiten",
        "Container": "lookup"
      },
      {
        "Id": "8c7c6c2b-9489-4530-b2f9-a299daa03db3",
        "Entity": "lookup",
        "Identifier": "meta.lookup.exportjson",
        "DisplayName": "Exportieren",
        "Container": "lookup"
      },
      {
        "Id": "73d1192a-8584-4227-a90c-e9e987c52a57",
        "Entity": "lookup",
        "Identifier": "meta.lookup.importjson",
        "DisplayName": "Importieren",
        "Container": "lookup"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": []
  },
  {
    "Id": "b7cff397-e49d-45a1-add2-a77f61be28f2",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "mlmodel",
    "DisplayName": "Machine Learning Model",
    "BaseUrl": "{meta}mlmodel",
    "ItemMappingScript": null,
    "ItemReverseMappingScript": null,
    "ListQuery": "[{__KEY__:'4b466307-dea7-138d-a74b-0bb3dd84fe8c',identifier:'primary',query:'select\\n  Uuid as Id,\\n  Identifier, \\n  Type,\\n  TrainState\\nfrom mlmodel\\nwhere TenantId=@tenantId'},{__KEY__:'dd9378a8-0b70-9dc3-2362-b78872fedeb6',identifier:'exportjson',query:'SELECT \\n  Uuid as Id,\\n  Identifier, \\n  Type,\\n  TrainSql,\\n  0 as TrainState,  \\n  null as TrainResult,\\n  Options\\nFROM mlmodel WHERE TenantId=@tenantId and Uuid in (@id)'}]",
    "ByIdQuery": "[{__KEY__:'47e41eb2-1939-457b-53cd-de5dc381e42d',identifier:'primary',query:'select\\n  Uuid as Id,\\n  Identifier, \\n  Type,\\n  TrainSql,\\n  TrainState,\\n  TrainResult,\\n  Options\\nfrom mlmodel\\nwhere TenantId=@tenantId and Uuid=@Id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"SELECT Id=NEWID(), Identifier=null, Type=0, TrainSql=null, TrainState=0, TrainResult=null, Options='{}'\" }]",
    "ScalarValueQuery": null,
    "SaveStatement": "[{__KEY__:'d231f5b2-7bf7-ba4b-5b37-85a33d2779dc',identifier:'primary',query:'UPDATE mlmodel SET \\n  Identifier=@Identifier, \\n  Type=@Type, \\n  TrainSql=@TrainSql, \\n  TrainState=1,\\n  Options=@Options,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId = @tenantId and Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO mlmodel (Uuid, TenantId, Identifier, Type, TrainSql, TrainState, Options, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @Identifier, @Type, @TrainSql, 0, @Options, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM mlmodel WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'},{__KEY__:'948559ab-e8a3-ec83-c032-f14ed386b781',identifier:'trainingstate',query:'UPDATE mlmodel SET \\n  TrainState=@TrainState,\\n  TrainResult=@TrainResult,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId = @tenantId and Uuid = @Id;  '}]",
    "RemoveStatement": "delete from mlmodel where TenantId=@tenantId and Uuid=@id",
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": null,
    "BeforeSaveScript": null,
    "SaveScript": null,
    "Lookups": "[]",
    "Picklists": "[{__KEY__:'80cdedf4-4855-d3e9-97ff-6f6bf66cd79b',identifier:'typePicklist',entity:'mlmodel',field:'Type'},{__KEY__:'5445d960-98f1-9c5e-dd73-38c4adac6464',identifier:'trainStatePicklist',entity:'mlmodel',field:'TrainState'}]",
    "CustomScripts": "{extendedRightsCheck:\"if (right === 'train' || right === 'consume') {\\n  return userinfo.right.includes('meta.mlmodel.edit') || result;\\n}\\n\\nreturn result;\",prepareCustomFunction:\"if (identifier === 'train') {\\n\\n  util.train(selection.map(s => s.Id), function() {\\n    messageCallback('Training ausgelöst')\\n  }, function(err) {\\n    messageCallback('Es ist ein Fehler aufgetreten: ' + err);\\n  });\\n}\"}",
    "GridLayout": "[{__KEY__:'e4a159c8-4793-823a-0a1e-45798ddcb0dd',allowMultiselect:true,columns:[{__KEY__:'21ea21e3-5623-7a2b-b111-1f2ef76a56ab',position:'1',type:'text',dataMember:'Identifier',caption:'Eindeutige Kennung'},{__KEY__:'4916c43c-8e74-8110-5c38-47ee1c436cba',position:'2',type:'pickvalue',dataMember:'Type',caption:'Typ',lookup:'typePicklist'},{__KEY__:'0cad34e5-7e7a-5403-4da3-cd860c0bec10',position:'3',type:'pickvalue',dataMember:'TrainState',caption:'Status Training',lookup:'trainStatePicklist'}],summaries:[],identifier:'primary',editLayout:'primary',title:'Machine Learning Modelle',allowEditing:false}]",
    "EditLayout": "[{__KEY__:'a366a745-2751-274a-ae8c-6fc31003401b',items:[{type:'text',options:{dataMember:'Identifier',caption:'Eindeutige Kennung',required:true}},{type:'pickvalue',options:{dataMember:'Type',caption:'Typ',required:true,lookup:'typePicklist'}},{type:'pickvalue',options:{dataMember:'TrainState',caption:'Status Training',required:true,readonly:true,lookup:'trainStatePicklist'}},{type:'tabs',items:[{type:'tab',options:{caption:'Training Abfrage'},items:[{type:'sql',options:{dataMember:'TrainSql'}}]},{type:'tab',options:{caption:'Optionen'},items:[{type:'json',options:{dataMember:'Options'}}]},{type:'tab',options:{caption:'Ergebnis'},items:[{type:'json',options:{readonly:true,dataMember:'TrainResult'}}]},{type:'tab',colCount:1,options:{caption:'Anhänge'},items:[{type:'attachements',options:{dataMember:'Id'}}]}]}],identifier:'primary',colCount:'1'}]",
    "CustomFunctions": "[{__KEY__:'8ca050bc-7e8e-1e92-aec3-7e8c556e1ad1',options:{},id:'train',type:'edit',text:'Modell trainieren',icon:'bi bi-edit',externalEditor:false,multi:true},{__KEY__:'22b99f7e-37c4-19d6-57d6-6b92fbfd2461',options:{format:'json'},id:'exportjson',type:'export',text:'Exportieren',icon:'bi bi-download',multi:true,externalEditor:false},{__KEY__:'06aa4a3e-e8e1-aa71-5886-ce78e873babd',options:{format:'json'},id:'importjson',type:'import',text:'Importieren',icon:'bi bi-upload',multi:false,externalEditor:false}]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "d86eb474-4a12-4f4f-a339-b457e75bc2a3",
        "Entity": "mlmodel",
        "Identifier": "meta.mlmodel.add",
        "DisplayName": "Anlegen",
        "Container": "mlmodel"
      },
      {
        "Id": "ac60281a-f8ef-4df4-908b-6aabfe5cdb03",
        "Entity": "mlmodel",
        "Identifier": "meta.mlmodel.view",
        "DisplayName": "Anzeigen",
        "Container": "mlmodel"
      },
      {
        "Id": "5cb02226-2db6-488c-bfad-65c84fb3f152",
        "Entity": "mlmodel",
        "Identifier": "meta.mlmodel.edit",
        "DisplayName": "Bearbeiten",
        "Container": "mlmodel"
      },
      {
        "Id": "db95add2-b2a6-493e-a8fe-b6f39f41660a",
        "Entity": "mlmodel",
        "Identifier": "meta.mlmodel.delete",
        "DisplayName": "Löschen",
        "Container": "mlmodel"
      }
    ],
    "Pickvalues": [
      {
        "Id": "1f0e7910-378c-4d98-a06e-d460f87133ac",
        "Entity": "mlmodel",
        "Field": "TrainState",
        "Value": 0,
        "Text": "Unbekannt",
        "Sorting": null
      },
      {
        "Id": "f47b7eb5-07bc-4cad-824a-fd05df58b1b3",
        "Entity": "mlmodel",
        "Field": "TrainState",
        "Value": 1,
        "Text": "Veraltet",
        "Sorting": null
      },
      {
        "Id": "e764f8fa-6b3a-4cdc-80e2-24a96a3818b0",
        "Entity": "mlmodel",
        "Field": "TrainState",
        "Value": 5,
        "Text": "Warte auf Ausführung",
        "Sorting": null
      },
      {
        "Id": "73456b98-40bf-4854-af4b-02603b369186",
        "Entity": "mlmodel",
        "Field": "TrainState",
        "Value": 6,
        "Text": "In Arbeit",
        "Sorting": null
      },
      {
        "Id": "63f2965d-6074-48b7-90af-4ade0bf0adf0",
        "Entity": "mlmodel",
        "Field": "TrainState",
        "Value": 10,
        "Text": "Aktuell",
        "Sorting": null
      },
      {
        "Id": "309f4068-de5e-4fff-a952-3d3d66c38065",
        "Entity": "mlmodel",
        "Field": "TrainState",
        "Value": 99,
        "Text": "Fehler",
        "Sorting": null
      },
      {
        "Id": "d3a5446d-dd00-405e-810d-e72f7dc5963f",
        "Entity": "mlmodel",
        "Field": "Type",
        "Value": 0,
        "Text": "Nicht festgelegt",
        "Sorting": null
      },
      {
        "Id": "82d9f7b5-ed9b-4b90-ac42-9c7845c3003f",
        "Entity": "mlmodel",
        "Field": "Type",
        "Value": 1,
        "Text": "Regression",
        "Sorting": null
      }
    ],
    "CharacteristicAssociations": []
  },
  {
    "Id": "6d61ef29-14cb-4792-a703-b08ea4c57d26",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "notification",
    "DisplayName": "Benachrichtigung",
    "BaseUrl": "{document}notification",
    "ItemMappingScript": "if (item.DocumentParams) {\n    item.EditableParameter = util.parse(item.DocumentParams).map(function(param) {\n        if (param.multi) {\n            if (param.value) {\n                param.value = param.value.split(',');\n            }\n        }\n\n        return param;\n    });\n}\n\nreturn item;",
    "ItemReverseMappingScript": "if (item.EditableParameter) {\n    item.DocumentParams = JSON.stringify(item.EditableParameter.map(function(param) {\n\n        var mappedParam = Object.assign({}, param);\n\n        if (param.multi) {\n            if (param.value) {\n                mappedParam.value = param.value.join(',');\n            }\n        }\n\n        return mappedParam;\n    }));\n\n    item.EditableParameter = null;\n}\n\nreturn item;",
    "ListQuery": "[{__KEY__:'80222729-c528-39ed-7ec9-495c9c9a88e6',identifier:'primary',query:'SELECT Uuid as Id, DocumentId, Identifier, Name, Params, State\\nFROM notification\\nWHERE TenantId = @tenantId\\nORDER BY Identifier'},{__KEY__:'e31be3d9-5e8d-c48e-ddae-b3b315c7e618',identifier:'exportjson',query:'SELECT Uuid as Id, DocumentId, Identifier, Name, Params, State FROM notification WHERE TenantId=@tenantId and Uuid in (@id)'}]",
    "ByIdQuery": "[{identifier:'primary',query:'SELECT Uuid as Id, DocumentId, Identifier, Name, Params, State FROM notification WHERE TenantId=@tenantId and Uuid = @id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"SELECT Id=NEWID(), DocumentId=null, Identifier=null, Name=null, Params=null, State=0\" }]",
    "ScalarValueQuery": "primary",
    "SaveStatement": "[{identifier:'primary',query:'UPDATE notification SET \\n  DocumentId=@DocumentId, \\n  Identifier=@Identifier, \\n  Name=@Name, \\n  Params=@Params, \\n  State=@State, \\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId=@tenantId and Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO notification (Uuid, TenantId, DocumentId, Identifier, Name, Params, State, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @DocumentId, @Identifier, @Name, @Params, @State, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM notification WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'}]",
    "RemoveStatement": "delete from notification where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": "",
    "BeforeSaveScript": null,
    "SaveScript": "",
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": "{editorValueChanged:\"if (identifier === 'DocumentId') {\\n    util.withLookupById(lookups.documentLookup, value, function(doc) {\\n        if (doc.ReportParameter) {\\n            var paramList = util.parse(doc.ReportParameter).map(function(p) {\\n                return {\\n                    parameter: p.name,\\n                    description: p.description,\\n                    lookupType: p.lookupType,\\n                    lookupId: p.lookupId,\\n                    lookupIdentifier: p.lookupIdentifier,\\n                    lookupEntity: p.lookupEntity,\\n                    lookupField: p.lookupField,\\n                    lookupValueMember: p.lookupDataMember,\\n                    lookupDisplayMember: p.lookupDisplayMember,\\n                    multi: p.multi\\n                }\\n            });\\n\\n            item.EditableParameter = paramList;\\n            editUtil.setEditorOption('EditableParameter', 'value', paramList);\\n        } else {\\n            item.EditableParameter = [];\\n            editUtil.setEditorOption('EditableParameter', 'value', []);\\n        }\\n    });\\n}\",editorPreparing:'',detailGridCellPreparing:\"if (identifier === 'value') {\\n  switch (detailItem.lookupType) {\\n    case 'tenantlookup':\\n    case 'metalookup':\\n      {\\n        if (detailItem.lookupIdentifier) {\\n            if (detailItem.multi) {\\n                options.type = 'multilookup';\\n                options.lookup = detailItem.lookupIdentifier;\\n                options.valueExpr = detailItem.lookupValueMember;\\n                options.displayExpr = detailItem.lookupDisplayMember;\\n            } else {\\n                options.type = 'lookup';\\n                options.lookup = detailItem.lookupIdentifier;\\n                options.valueExpr = detailItem.lookupValueMember;\\n                options.displayExpr = detailItem.lookupDisplayMember;\\n            }\\n        } else if (detailItem.multi) {\\n            options.type = 'multilookup';\\n            options.allowCustomValues = true;\\n        }\\n        break;  \\n      }\\n    case 'processingstate':\\n      {\\n        if (detailItem.lookupEntity) {\\n            if (detailItem.multi) {\\n                options.type = 'multilookup';\\n                options.lookup = 'entityStateLookup';\\n                options.lookupParam = detailItem.lookupEntity;\\n                options.valueExpr = detailItem.lookupValueMember;\\n                options.displayExpr = detailItem.lookupDisplayMember;\\n            } else {\\n                options.type = 'lookup';\\n                options.lookup = 'entityStateLookup';\\n                options.lookupParam = detailItem.lookupEntity;\\n                options.valueExpr = detailItem.lookupValueMember;\\n                options.displayExpr = detailItem.lookupDisplayMember;\\n            }\\n        } else if (detailItem.multi) {\\n            options.type = 'multilookup';\\n            options.allowCustomValues = true;\\n        }\\n      }\\n      break;\\n    case 'pickvalue':\\n      {\\n        if (detailItem.lookupEntity && detailItem.lookupField) {\\n            if (detailItem.multi) {\\n                options.type = 'multilookup';\\n                options.lookup = 'entityPickvalueLookup';\\n                options.pickvalueEntity = detailItem.lookupEntity;\\n                options.pickvalueField = detailItem.lookupField;\\n                options.valueExpr = detailItem.lookupValueMember;\\n                options.displayExpr = detailItem.lookupDisplayMember;\\n            } else {\\n                options.type = 'lookup';\\n                options.lookup = 'entityPickvalueLookup';\\n                options.pickvalueEntity = detailItem.lookupEntity;\\n                options.pickvalueField = detailItem.lookupField;\\n                options.valueExpr = detailItem.lookupValueMember;\\n                options.displayExpr = detailItem.lookupDisplayMember;\\n            }\\n        } else if (detailItem.multi) {\\n            options.type = 'multilookup';\\n            options.allowCustomValues = true;\\n        }\\n      }\\n      break;\\n  }\\n    \\n}\",editorInitialized:\"if (identifier === 'EditableParameter' && item.DocumentId) {\\n    util.withLookupById(lookups.documentLookup, item.DocumentId, function(doc) {\\n        if (doc.ReportParameter) {\\n            var paramList = util.parse(doc.ReportParameter);\\n            var newEditableParameter = paramList.map(function(p) {\\n\\n                var paramValue = item.EditableParameter.find(function(pv) {\\n                    return pv.parameter === p.name;\\n                });\\n\\n                return {\\n                    parameter: p.name,\\n                    description: p.description,\\n                    lookupType: p.lookupType,\\n                    lookupId: p.lookupId,\\n                    lookupIdentifier: p.lookupIdentifier,\\n                    lookupEntity: p.lookupEntity,\\n                    lookupField: p.lookupField,\\n                    lookupValueMember: p.lookupDataMember,\\n                    lookupDisplayMember: p.lookupDisplayMember,\\n                    multi: p.multi,\\n                    value: paramValue ? paramValue.value: null\\n                }\\n            });\\n\\n            item.EditableParameter = newEditableParameter;\\n            editUtil.setEditorOption('EditableParameter', 'value', newEditableParameter);\\n        } else {\\n            item.EditableParameter = [];\\n            editUtil.setEditorOption('EditableParameter', 'value', []);\\n        }\\n    });\\n}\"}",
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Benachrichtigungen',allowMultiselect:true,columns:[{type:'lookup',dataMember:'State',caption:'Status',lookup:'stateLookup',position:'2'},{type:'text',dataMember:'Name',caption:'Name',position:'3'},{type:'lookup',dataMember:'DocumentId',caption:'Vorlage',lookup:'documentLookup',position:'4'},{__KEY__:'67de2c49-7b79-018a-594a-49d777ded3b6',type:'text',dataMember:'Identifier',caption:'Eindeutige Kennung',position:'1'}],summaries:[{dataMember:'Name',summaryType:'count',groupSummary:true,totalSummary:true}]}]",
    "EditLayout": "[{identifier:'primary',colCount:1,colCountByScreen:{sm:1,lg:1},fullscreen:false,items:[{type:'lookup',options:{dataMember:'State',caption:'Status',required:true,lookup:'allowedStateLookup',lookupParam:'Id'}},{type:'text',options:{dataMember:'Name',caption:'Bezeichnung',required:true}},{type:'text',options:{dataMember:'Identifier',caption:'Technisches Kürzel',required:true}},{type:'lookup',options:{dataMember:'DocumentId',caption:'Vorlage',required:true,lookup:'documentLookup'}},{type:'detailgrid',options:{dataMember:'EditableParameter',caption:'Parameter für Vorlage',itemoptions:{update:true,editMode:'instant',columns:[{type:'text',dataMember:'description',caption:'Parameter'},{type:'dynamic',dataMember:'value',caption:'Wert',editable:true}]}}}]}]",
    "CustomFunctions": "[{__KEY__:'bcb0b573-d7ec-2a7d-90b7-2ea837a48d8c',options:{format:'json'},id:'exportjson',type:'export',text:'Exportieren',icon:'bi bi-download',multi:true},{__KEY__:'1b40a1de-eb8b-4275-aa63-e9476fd425ec',options:{format:'json'},id:'importjson',type:'import',text:'Importieren',icon:'bi bi-upload'}]",
    "StateColumn": "State",
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": "hasRight('meta.notification.edit');",
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [
      {
        "Id": "74eb1c0f-2a37-4db3-b32c-0121cffb4a19",
        "Entity": "notification",
        "State": 5,
        "Name": "Test",
        "Successors": "['e00bf466-da85-414e-8dd3-27b05f2dbfa0','758fa198-a480-4a6e-92a4-29701def548c','31bb8f78-9b5c-42d7-af51-7179b6f1a70c','a9290153-5e0e-4c8f-abe0-89a18607a9b4','fe596368-884f-4ad1-988c-9f8bbf7a3d0f','9a9b0791-bef8-4aff-bd9e-f7153dc330e4','4d9cc12e-3efc-4aaa-8155-dac5562c9a52']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      },
      {
        "Id": "e00bf466-da85-414e-8dd3-27b05f2dbfa0",
        "Entity": "notification",
        "State": 15,
        "Name": "GF Harlinghausen",
        "Successors": "['74eb1c0f-2a37-4db3-b32c-0121cffb4a19']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      },
      {
        "Id": "758fa198-a480-4a6e-92a4-29701def548c",
        "Entity": "notification",
        "State": 10,
        "Name": "Wehrleitung",
        "Successors": "['74eb1c0f-2a37-4db3-b32c-0121cffb4a19']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      },
      {
        "Id": "31bb8f78-9b5c-42d7-af51-7179b6f1a70c",
        "Entity": "notification",
        "State": 14,
        "Name": "GF Pr. Oldendorf",
        "Successors": "['74eb1c0f-2a37-4db3-b32c-0121cffb4a19']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      },
      {
        "Id": "a9290153-5e0e-4c8f-abe0-89a18607a9b4",
        "Entity": "notification",
        "State": 13,
        "Name": "Zugführer 3",
        "Successors": "['74eb1c0f-2a37-4db3-b32c-0121cffb4a19']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      },
      {
        "Id": "fe596368-884f-4ad1-988c-9f8bbf7a3d0f",
        "Entity": "notification",
        "State": 11,
        "Name": "Zugführer 1",
        "Successors": "['74eb1c0f-2a37-4db3-b32c-0121cffb4a19']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      },
      {
        "Id": "4d9cc12e-3efc-4aaa-8155-dac5562c9a52",
        "Entity": "notification",
        "State": 0,
        "Name": "Entwicklung",
        "Successors": "['74eb1c0f-2a37-4db3-b32c-0121cffb4a19']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      },
      {
        "Id": "9a9b0791-bef8-4aff-bd9e-f7153dc330e4",
        "Entity": "notification",
        "State": 12,
        "Name": "Zugführer 2",
        "Successors": "['74eb1c0f-2a37-4db3-b32c-0121cffb4a19']",
        "RecordFinished": false,
        "RecordLocked": false,
        "ReasonRequired": false
      }
    ],
    "Rights": [
      {
        "Id": "6a511ac5-7858-4db5-b318-1a11d1c22dc0",
        "Entity": "notification",
        "Identifier": "meta.notification.edit",
        "DisplayName": "Bearbeiten",
        "Container": "notification"
      },
      {
        "Id": "70e86bfa-26a6-4f83-a1a6-50f6bec3e83b",
        "Entity": "notification",
        "Identifier": "meta.notification.add",
        "DisplayName": "Anlegen",
        "Container": "notification"
      },
      {
        "Id": "29d4d103-3118-4df4-a57e-674a2f3c7f14",
        "Entity": "notification",
        "Identifier": "meta.notification.delete",
        "DisplayName": "Löschen",
        "Container": "notification"
      },
      {
        "Id": "549f9aef-0e4c-4c6c-9126-e5935de300fc",
        "Entity": "notification",
        "Identifier": "meta.notification.view",
        "DisplayName": "Anzeigen",
        "Container": "notification"
      },
      {
        "Id": "566654af-cc68-4f5d-a9fb-a125a0a83895",
        "Entity": "notification",
        "Identifier": "meta.notification.importjson",
        "DisplayName": "Importieren",
        "Container": "notification"
      },
      {
        "Id": "ccf1e5a4-c927-4c02-a080-a908d74beb15",
        "Entity": "notification",
        "Identifier": "meta.notification.exportjson",
        "DisplayName": "Exportieren",
        "Container": "notification"
      }
    ],
    "Pickvalues": [
      {
        "Id": "c8fc58bc-918a-49ed-9d40-8ebaedfa0640",
        "Entity": "notification",
        "Field": "state",
        "Value": 0,
        "Text": "Entwicklung",
        "Sorting": 1
      },
      {
        "Id": "7197d9e9-1693-4b4a-8b3c-adaa9afe0ebc",
        "Entity": "notification",
        "Field": "state",
        "Value": 5,
        "Text": "Test",
        "Sorting": 2
      }
    ]
  },
  {
    "Id": "827621d9-0fcc-42d5-b83b-0897164d9aaf",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "page",
    "DisplayName": "Bildschirmseite",
    "BaseUrl": "{meta}page",
    "ItemMappingScript": "if (item.Lookups) {\n    item.EditableLookups = util.parse(item.Lookups);\n} else {\n    item.EditableLookups = [];\n}\n\nif (item.Picklists) {\n    item.EditablePicklists = util.parse(item.Picklists);\n}\n\nif (item.CustomScripts) {\n    item.EditableCustomScripts = util.parse(item.CustomScripts);\n}\n\nreturn item;",
    "ItemReverseMappingScript": "if (item.EditableLookups) {\n    item.Lookups = util.stringify(item.EditableLookups);\n\n    item.EditableLookups = null;\n}\n\nif (item.EditablePicklists) {\n    item.Picklists = util.stringify(item.EditablePicklists);\n    item.EditablePicklists = null;\n}\n\nif (item.EditableCustomScripts) {\n    item.CustomScripts = util.stringify(item.EditableCustomScripts);\n\n    item.EditableCustomScripts = null;\n}\n\nreturn item;",
    "ListQuery": "[{__KEY__:'5dba2aa8-419c-47fb-f66e-446bca41917f',identifier:'primary',query:'SELECT Uuid as Id, Identifier, Name, Layout, Lookups, Picklists, CustomScripts\\nFROM page\\nWHERE TenantId = @tenantId\\nORDER BY Identifier'},{__KEY__:'a0671ba6-d290-7f0c-b441-88e87b625765',identifier:'exportjson',query:'SELECT Uuid as Id, Identifier, Name, Layout, Lookups, Picklists, CustomScripts FROM page WHERE TenantId=@tenantId and Uuid in (@id)'}]",
    "ByIdQuery": "[{identifier:'primary',query:'SELECT Uuid as Id, Identifier, Name, Layout, Lookups, Picklists, CustomScripts FROM page WHERE TenantId=@tenantId and Uuid = @id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"SELECT Id=NEWID(), Identifier=null, Name=null, Layout=null, Lookups=null, Picklists=null, CustomScripts=null\" }]",
    "ScalarValueQuery": null,
    "SaveStatement": "[{identifier:'primary',query:'UPDATE page SET \\n  Identifier=@Identifier, \\n  Name=@Name, \\n  Layout=@Layout, \\n  Lookups=@Lookups, \\n  Picklists=@Picklists, \\n  CustomScripts=@CustomScripts, \\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId = @tenantId and Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO page (Uuid, TenantId, Identifier, Name, Layout, Lookups, Picklists, CustomScripts, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @Identifier, @Name, @Layout, @Lookups, @Picklists, @CustomScripts, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM page WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'}]",
    "RemoveStatement": "delete from page where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": "",
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": "",
    "BeforeSaveScript": "",
    "SaveScript": "",
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": null,
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Bildschirmseiten',allowMultiselect:true,columns:[{type:'text',dataMember:'Identifier',caption:'Bezeichnung'},{type:'text',dataMember:'Name',caption:'Anzeigename'}],summaries:[{dataMember:'Identifier',summaryType:'count',groupSummary:true,totalSummary:true}],details:''}]",
    "EditLayout": "[{identifier:'primary',colCount:1,colCountByScreen:{sm:1,lg:1},fullscreen:false,items:[{type:'text',options:{dataMember:'Identifier',caption:'Bezeichnung',required:true}},{type:'text',options:{dataMember:'Name',caption:'Anzeigename'}},{type:'tabs',items:[{type:'tab',options:{caption:'Layout'},items:[{type:'json',options:{dataMember:'Layout'}}]},{type:'tab',options:{caption:'Auswahlabfragen'},items:[{type:'detailgrid',options:{dataMember:'EditableLookups',itemoptions:{add:true,update:true,delete:true,columns:[{type:'lookup',dataMember:'id',caption:'Definition',editable:true,lookup:'lookupLookup'},{type:'text',dataMember:'identifier',caption:'Eindeutiger Bezeichner',editable:true},{type:'text',dataMember:'valueMember',caption:'Spalte für Wert',editable:true},{type:'text',dataMember:'displayMember',caption:'Spalte für Anzeige',editable:true},{type:'staticlookup',dataMember:'type',caption:'Abfrageart',editable:true,displayExpr:'text',valueExpr:'value',items:[{value:0,text:'Auswahlliste'},{value:1,text:'Autovervollständigung'}]},{type:'bool',dataMember:'hasParam',caption:'Benötigt Parameter',editable:true}]}}}]},{type:'tab',options:{caption:'Auswahlwerte'},items:[{type:'detailgrid',options:{dataMember:'EditablePicklists',caption:'Auswahllisten für Werte',itemoptions:{add:true,update:true,delete:true,columns:[{type:'text',dataMember:'identifier',caption:'Eindeutige Bezeichnung',editable:true,required:true},{type:'text',dataMember:'entity',caption:'Objektdefinition',editable:true},{type:'text',dataMember:'field',caption:'Merkmal',editable:true}]}}}]},{type:'tab',options:{caption:'Skripting'},items:[{type:'javascript',options:{dataMember:'EditableCustomScripts.pageVisible',caption:'Seite sichtbar',height:'100%',itemoptions:{prefixCode:['function pageVisible(userinfo, page) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.pageEnabled',caption:'Seite aktivierbar',height:'100%',itemoptions:{prefixCode:['function pageEnabled(userinfo, page) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.prepareCustomParam',caption:'Objektspezifischen Parameter vorbereiten',height:'100%',itemoptions:{prefixCode:['function prepareCustomParam(lookups, util, callback) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.paramsInitialized',caption:'Parameterleiste initialisiert',height:'100%',itemoptions:{prefixCode:['function paramsInitialized(hidden, lookups, util, actions, pageParam) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.paramEditorInitialized',caption:'Parameter-Editor initialisiert',height:'100%',itemoptions:{prefixCode:['function paramEditorInitialized(name, value, editUtil, lookups, util, actions, pageParam) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.paramEditorValueChanged',caption:'Parameter-Editor Wert verändert',height:'100%',itemoptions:{prefixCode:['function paramEditorValueChanged(name, value, editUtil, lookups, util, actions, pageParam) {'],suffixCode:['}']}}},{type:'javascript',options:{dataMember:'EditableCustomScripts.paramEditorEvent',caption:'Parameter-Editor Ereignis',height:'100%',itemoptions:{prefixCode:['function paramEditorEvent(name, event, editUtil, lookups, util, actions, pageParam, param) {'],suffixCode:['}']}}}]}]}]}]",
    "CustomFunctions": "[{__KEY__:'d4ddd5db-a9e7-9d3e-c3f2-f18d175fcad0',options:{format:'json'},id:'exportjson',type:'export',text:'Exportieren',icon:'bi bi-download',multi:true},{__KEY__:'f33c65cd-5582-4cb3-bc9e-bf6f7d6ef0d3',options:{format:'json'},id:'importjson',type:'import',text:'Importieren',icon:'bi bi-upload'}]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "984b5b08-dd25-4fcf-8536-5fc2e123034b",
        "Entity": "page",
        "Identifier": "meta.page.view",
        "DisplayName": "Anzeigen",
        "Container": "page"
      },
      {
        "Id": "9b4da3aa-66a7-4e4a-b7f6-6fe284791c68",
        "Entity": "page",
        "Identifier": "meta.page.delete",
        "DisplayName": "Löschen",
        "Container": "page"
      },
      {
        "Id": "e6544b21-0992-46f7-ab25-7982bab6e288",
        "Entity": "page",
        "Identifier": "meta.page.edit",
        "DisplayName": "Bearbeiten",
        "Container": "page"
      },
      {
        "Id": "765f8560-bd9a-4081-a52c-8294d6c215ae",
        "Entity": "page",
        "Identifier": "meta.page.add",
        "DisplayName": "Anlegen",
        "Container": "page"
      },
      {
        "Id": "9596021b-035a-437a-add1-df322a2e3bf5",
        "Entity": "page",
        "Identifier": "meta.page.exportjson",
        "DisplayName": "Exportieren",
        "Container": "page"
      },
      {
        "Id": "1e4bba6f-d44c-42d3-a59f-7f34c114e750",
        "Entity": "page",
        "Identifier": "meta.page.importjson",
        "DisplayName": "Importieren",
        "Container": "page"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": []
  },
  {
    "Id": "bd3f855a-46dc-4ea4-8ce7-95fb525ee6e0",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "pickvalue",
    "DisplayName": "Auswahlwerte",
    "BaseUrl": "{meta}pickvalue",
    "ItemMappingScript": null,
    "ItemReverseMappingScript": null,
    "ListQuery": "[{__KEY__:'332ecbe1-bdcb-f43b-30c3-dbc1831042a5',identifier:'entityandfield',query:'select\\n  Uuid as Id,\\n  Entity,\\n  Field,\\n  Value,\\n  Text,\\n  Sorting\\nfrom Pickvalue\\nwhere TenantId=@tenantId and Entity=@entity and Field=@field\\norder by Sorting'},{__KEY__:'98db3d18-4e51-67de-3dd9-132ae94324ee',identifier:'primary',query:'select\\n  Uuid as Id,\\n  Entity,\\n  Field,\\n  Value,\\n  Text,\\n  Sorting\\nfrom Pickvalue\\nwhere TenantId=@tenantId\\norder by Entity, Field, Sorting'},{__KEY__:'b2a0985f-9517-3e91-dd6e-cda5e399279b',identifier:'entity',query:'select\\n  Uuid as Id,\\n  Entity,\\n  Field,\\n  Value,\\n  Text,\\n  Sorting\\nfrom Pickvalue\\nwhere TenantId=@tenantId and Entity=@entity\\norder by Field, Sorting'}]",
    "ByIdQuery": "[{__KEY__:'36cc6655-eea4-ea27-27f9-0ece98ff3686',identifier:'primary',query:'select\\n  Uuid as Id,\\n  Entity,\\n  Field,\\n  Value,\\n  Text,\\n  Sorting\\nfrom Pickvalue\\nwhere TenantId=@tenantId and Uuid=@Id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"select\nId = NEWID(),\nEntity = null,\nField = null,\nValue = null,\nText = null,\nSorting = null\" }, { identifier: 'entityandfield', query: \"select\nId = NEWID(),\nEntity = @entity,\nField = @field,\nValue = null,\nText = null,\nSorting = null\" }, { identifier: 'entity', query: \"select\nId = NEWID(),\nEntity = @entity,\nField = null,\nValue = null,\nText = null,\nSorting = null\" }]",
    "ScalarValueQuery": null,
    "SaveStatement": "[{__KEY__:'5731effa-78c6-1d77-81e6-e4d5b3a17241',identifier:'primary',query:'UPDATE pickvalue SET \\n  Entity = @Entity,\\n  Field = @Field,\\n  Value = @Value,\\n  Text = @Text,\\n  Sorting = @Sorting,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId = @tenantId and Uuid = @Id; \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO pickvalue (Uuid, TenantId, Entity, Field, Value, Text, Sorting, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @Entity, @Field, @Value, @Text, @Sorting, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM pickvalue WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'}]",
    "RemoveStatement": "delete from pickvalue where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": null,
    "BeforeSaveScript": null,
    "SaveScript": null,
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": "{extendedRightsCheck:\"if (!result && param && param.identifier && ('' + param.identifier) === 'entityandfield' && param.entity && param.field) {\\n  result = userinfo.right.includes('tenant.pickvalue.' + param.entity + '.' + param.field + '.' + right);\\n}\\n\\nreturn result;\"}",
    "GridLayout": "[{__KEY__:'d31b8456-e296-1ad9-744a-a543c3d22043',allowMultiselect:false,columns:[{position:'1',type:'lookup',caption:'Objektdefinition',dataMember:'Entity',lookup:'entityIdentifierLookup'},{position:'2',type:'text',dataMember:'Field',caption:'Feld'},{position:'3',type:'number',dataMember:'Value',caption:'Wert'},{position:'4',type:'text',dataMember:'Text',caption:'Bezeichnung'},{position:'4',type:'number',dataMember:'Sorting',caption:'Reihenfolge',editable:true}],summaries:[],identifier:'primary',editLayout:'primary',title:'Auswahlwerte',allowEditing:true,allowSearchByBarcode:false},{__KEY__:'93b998d0-5b7b-ccc8-2ec1-222f98151595',allowMultiselect:false,columns:[{position:'1',type:'number',dataMember:'Value',caption:'Wert'},{position:'2',type:'text',dataMember:'Text',caption:'Bezeichnung'},{position:'3',type:'number',dataMember:'Sorting',caption:'Reihenfolge',editable:true}],summaries:[],identifier:'entityandfield',editLayout:'entityandfield',title:'Auswahlwerte',allowEditing:true,allowSearchByBarcode:false},{__KEY__:'d22e2500-14b2-e4d4-4786-d8454cae8ec7',allowMultiselect:false,columns:[{position:'1',type:'text',dataMember:'Field',caption:'Feld'},{position:'2',type:'number',dataMember:'Value',caption:'Wert'},{position:'3',type:'text',dataMember:'Text',caption:'Bezeichnung'},{position:'4',type:'number',dataMember:'Sorting',caption:'Reihenfolge',editable:true}],summaries:[],identifier:'entity',editLayout:'entity',title:'Auswahlwerte',allowEditing:true,allowSearchByBarcode:false}]",
    "EditLayout": "[{__KEY__:'f2326bd3-8674-43b6-c513-ab983a781481',items:[{type:'lookup',options:{dataMember:'Entity',caption:'Objektdefinition',lookup:'entityIdentifierLookup',required:true}},{type:'text',options:{dataMember:'Field',caption:'Feld',required:true}},{type:'text',options:{dataMember:'Text',caption:'Bezeichnung',required:true}},{type:'number',options:{dataMember:'Value',caption:'Wert',required:true}},{type:'number',options:{dataMember:'Sorting',caption:'Reihenfolge bei Erfassung'}}],identifier:'primary',colCount:'1'},{__KEY__:'0cb2b1da-b51d-4127-9d2b-be75b6693340',items:[{type:'text',options:{dataMember:'Text',caption:'Bezeichnung',required:true}},{type:'number',options:{dataMember:'Value',caption:'Wert',required:true}},{type:'number',options:{dataMember:'Sorting',caption:'Reihenfolge bei Erfassung'}}],identifier:'entityandfield',colCount:'1'},{__KEY__:'05d7cd27-a5fd-7850-c7a6-c98618ad5756',items:[{type:'text',options:{dataMember:'Field',caption:'Feld',required:true}},{type:'text',options:{dataMember:'Text',caption:'Bezeichnung',required:true}},{type:'number',options:{dataMember:'Value',caption:'Wert',required:true}},{type:'number',options:{dataMember:'Sorting',caption:'Reihenfolge bei Erfassung'}}],identifier:'entity',colCount:'1'}]",
    "CustomFunctions": "[]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "25eb7633-d324-4e3e-96e3-0c79bf8c6845",
        "Entity": "pickvalue",
        "Identifier": "meta.pickvalue.add",
        "DisplayName": "Anlegen",
        "Container": "pickvalue"
      },
      {
        "Id": "09024e60-8bc7-459a-adb2-fa38a551b5c6",
        "Entity": "pickvalue",
        "Identifier": "meta.pickvalue.view",
        "DisplayName": "Anzeigen",
        "Container": "pickvalue"
      },
      {
        "Id": "a311c806-35fa-4e29-9287-357316d7e6ce",
        "Entity": "pickvalue",
        "Identifier": "meta.pickvalue.edit",
        "DisplayName": "Bearbeiten",
        "Container": "pickvalue"
      },
      {
        "Id": "163edb10-a4f0-4a22-b31a-f0a91bc0cac4",
        "Entity": "pickvalue",
        "Identifier": "meta.pickvalue.delete",
        "DisplayName": "Löschen",
        "Container": "pickvalue"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": []
  },
  {
    "Id": "d87d0539-4f3e-459e-985d-550a5a326145",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "processingstate",
    "DisplayName": "Statuswerte",
    "BaseUrl": "{meta}processingstate",
    "ItemMappingScript": "if (item.Successors) {\n    item.EditableSuccessors = util.parse(item.Successors);\n} else {\n    item.EditableSuccessors = [];\n}\n\nreturn item;",
    "ItemReverseMappingScript": "if (item.EditableSuccessors) {\n    item.Successors = util.stringify(item.EditableSuccessors);\n    \n    item.EditableSuccessors = null;\n}\n\nreturn item;",
    "ListQuery": "[{__KEY__:'569c8b32-acb4-01b4-1ce6-f4a027b296e5',identifier:'primary',query:'select\\n  Uuid as Id,\\n  Entity,\\n  State,\\n  Name,\\n  RecordFinished,\\n  RecordLocked,\\n  Successors,\\n  ReasonRequired\\nfrom processingstate\\nwhere TenantId=@tenantId\\norder by Entity, State'},{__KEY__:'5defd4d3-07e1-a47d-8dc2-e3bf51f7d410',identifier:'entity',query:'select\\n  Uuid as Id,\\n  Entity,\\n  State,\\n  Name,\\n  RecordFinished,\\n  RecordLocked,\\n  Successors,\\n  ReasonRequired\\nfrom processingstate\\nwhere TenantId=@tenantId and Entity=@entity\\norder by State'}]",
    "ByIdQuery": "[{__KEY__:'36e514e6-a5e0-8a8b-26a3-6a5446f96863',identifier:'primary',query:'select\\n  Uuid as Id,\\n  Entity,\\n  State,\\n  Name,\\n  RecordFinished,\\n  RecordLocked,\\n  Successors,\\n  ReasonRequired\\nfrom processingstate\\nwhere TenantId=@tenantId and Uuid=@Id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"select\nId = NEWID(),\nEntity = null,\nState = null,\nName = null,\nRecordFinished = null,\nRecordLocked = null,\nSuccessors = null,\nReasonRequired = null\" }, { identifier: 'entity', query: \"select\nId = NEWID(),\nEntity = @entity,\nState = null,\nName = null,\nRecordFinished = null,\nRecordLocked = null,\nSuccessors = null,\nReasonRequired = null\" }]",
    "ScalarValueQuery": null,
    "SaveStatement": "[{__KEY__:'4d59a085-9e2d-9c5f-9b7d-129da67d5086',identifier:'primary',query:'UPDATE processingstate SET \\n  Entity = @Entity,    \\n  State = @State,\\n  Name = @Name,\\n  RecordFinished = @RecordFinished,\\n  RecordLocked = @RecordLocked,\\n  Successors = @Successors,\\n  ReasonRequired = @ReasonRequired,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId = @tenantId and Uuid = @Id; \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO processingstate (Uuid, TenantId, Entity, State, Name, RecordFinished, RecordLocked, Successors, ReasonRequired, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @Entity, @State, @Name, @RecordFinished, @RecordLocked, @Successors, @ReasonRequired, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM processingstate WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'}]",
    "RemoveStatement": "delete from processingstate where TenantId=@tenantId and Uuid=@id;",
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": null,
    "BeforeSaveScript": null,
    "SaveScript": null,
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": "{detailGridCellPreparing:\"console.log('Preparing cell ' + identifier);\"}",
    "GridLayout": "[{__KEY__:'b736c757-0329-6db5-4156-7dc66bc4a13d',allowMultiselect:false,columns:[{position:'1',type:'lookup',caption:'Objektdefinition',dataMember:'Entity',lookup:'entityIdentifierLookup',required:true},{position:'2',type:'number',dataMember:'State',caption:'Statuswert',required:true},{position:'3',type:'text',dataMember:'Name',caption:'Bezeichnung',required:true},{position:'4',type:'multilookup',dataMember:'EditableSuccessors',caption:'Nachfolger',lookup:'processingstateLookup'},{position:'5',type:'bool',dataMember:'ReasonRequired',caption:'Begründung erforderlich'},{position:'6',type:'bool',dataMember:'RecordFinished',caption:'Verarbeitung abgeschlossen'},{position:'7',type:'bool',dataMember:'RecordLocked',caption:'Datensatz gesperrt'}],summaries:[],identifier:'primary',editLayout:'primary',title:'Statuswerte',allowEditing:false,allowSearchByBarcode:false},{__KEY__:'a3649e63-43a6-2f21-79d9-cebc2ef64030',allowMultiselect:false,columns:[{position:'1',type:'number',dataMember:'State',caption:'Statuswert',required:true},{position:'2',type:'text',dataMember:'Name',caption:'Bezeichnung',required:true},{position:'3',type:'multilookup',dataMember:'EditableSuccessors',caption:'Nachfolger',lookup:'processingstateLookup'},{position:'4',type:'bool',dataMember:'ReasonRequired',caption:'Begründung erforderlich'},{position:'5',type:'bool',dataMember:'RecordFinished',caption:'Verarbeitung abgeschlossen'},{position:'6',type:'bool',dataMember:'RecordLocked',caption:'Datensatz gesperrt'}],summaries:[],identifier:'entity',editLayout:'entity',title:'Statuswerte zur Objektdefinition',allowEditing:false,allowSearchByBarcode:false}]",
    "EditLayout": "[{__KEY__:'ca3faaed-b486-2e3c-78b3-eda64a0689c7',items:[{type:'lookup',options:{dataMember:'Entity',caption:'Objektdefinition',lookup:'entityIdentifierLookup',required:true}},{type:'number',options:{dataMember:'State',caption:'Statuswert',required:true}},{type:'text',options:{dataMember:'Name',caption:'Bezeichnung',required:true}},{type:'multilookup',options:{dataMember:'EditableSuccessors',caption:'Nachfolger',displayExpr:'Name',valueExpr:'Id',lookup:'entityStateLookup',lookupParam:'Entity'}},{type:'bool',options:{dataMember:'ReasonRequired',caption:'Begründung erforderlich'}},{type:'bool',options:{dataMember:'RecordFinished',caption:'Verarbeitung abgeschlossen'}},{type:'bool',options:{dataMember:'RecordLocked',caption:'Datensatz gesperrt'}}],identifier:'primary',colCount:'1'},{__KEY__:'0de260e6-baec-2217-bd37-bdc1addd5980',items:[{type:'number',options:{dataMember:'State',caption:'Statuswert',required:true}},{type:'text',options:{dataMember:'Name',caption:'Bezeichnung',required:true}},{type:'multilookup',options:{dataMember:'EditableSuccessors',caption:'Nachfolger',displayExpr:'Name',valueExpr:'Id',lookup:'entityStateLookup',lookupParam:'Entity'}},{type:'bool',options:{dataMember:'ReasonRequired',caption:'Begründung erforderlich'}},{type:'bool',options:{dataMember:'RecordFinished',caption:'Verarbeitung abgeschlossen'}},{type:'bool',options:{dataMember:'RecordLocked',caption:'Datensatz gesperrt'}}],identifier:'entity',colCount:'1'}]",
    "CustomFunctions": "[]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "d5f3c443-d98f-4eff-942f-d8f49e3086de",
        "Entity": "processingstate",
        "Identifier": "meta.processingstate.view",
        "DisplayName": "Anzeigen",
        "Container": "processingstate"
      },
      {
        "Id": "0803477c-bbad-4bb2-8b0d-7ff2e6cea8ff",
        "Entity": "processingstate",
        "Identifier": "meta.processingstate.edit",
        "DisplayName": "Bearbeiten",
        "Container": "processingstate"
      },
      {
        "Id": "25726ea5-41ab-40e9-ba6a-091d9c851999",
        "Entity": "processingstate",
        "Identifier": "meta.processingstate.delete",
        "DisplayName": "Löschen",
        "Container": "processingstate"
      },
      {
        "Id": "db5fe19e-93d4-4360-b268-7927faaa8869",
        "Entity": "processingstate",
        "Identifier": "meta.processingstate.add",
        "DisplayName": "Anlegen",
        "Container": "processingstate"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": []
  },
  {
    "Id": "9723e73c-b597-42ae-ba5b-8dbf59168865",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "statistic",
    "DisplayName": "Auswertung",
    "BaseUrl": "{meta}statistic",
    "ItemMappingScript": "if (item.CustomScripts) {\n    item.EditableCustomScripts = util.parse(item.CustomScripts);\n}\n\nreturn item;",
    "ItemReverseMappingScript": "if (item.EditableCustomScripts) {\n    item.CustomScripts = util.stringify(item.EditableCustomScripts);\n\n    item.EditableCustomScripts = null;\n}\n\nreturn item;",
    "ListQuery": "[{__KEY__:'273a2bcb-93d2-cc3a-73a8-51f74046a78c',identifier:'primary',query:'SELECT Uuid as Id, Identifier, Name, Meta, Entity, FetchSql, Layout, MappingScript, CustomScripts \\nFROM statistic\\nWHERE TenantId = @tenantId\\nORDER BY Identifier'},{__KEY__:'00ea7379-7135-55e9-5284-b77f9a8c2273',identifier:'exportjson',query:'SELECT\\n  Uuid as Id, \\n  Identifier, \\n  Name, \\n  Meta, \\n  Entity, \\n  FetchSql, \\n  FetchScript,\\n  Layout, \\n  MappingScript, \\n  CustomScripts \\nFROM statistic \\nWHERE TenantId=@tenantId and Uuid in (@id)'}]",
    "ByIdQuery": "[{identifier:'primary',query:'SELECT \\n  Uuid as Id, \\n  Identifier, \\n  Name, \\n  Meta, \\n  Entity, \\n  FetchSql, \\n  FetchScript,\\n  Layout, \\n  MappingScript, \\n  CustomScripts \\nFROM statistic \\nWHERE TenantId=@tenantId and Uuid = @id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"SELECT Id=NEWID(), Identifier=null, Name=null, Meta=0, Entity=null, FetchSql=null, FetchScript=null, Layout=null, MappingScript=null, CustomScripts=null\" }]",
    "ScalarValueQuery": null,
    "SaveStatement": "[{identifier:'primary',query:'UPDATE statistic SET \\n  Identifier=@Identifier, \\n  Name=@Name, \\n  Meta=@Meta, \\n  Entity=@Entity, \\n  FetchSql=@FetchSql, \\n  FetchScript=@FetchScript, \\n  Layout=@Layout, \\n  MappingScript=@MappingScript, \\n  CustomScripts=@CustomScripts, \\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE TenantId = @tenantId and Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO statistic (Uuid, TenantId, Identifier, Name, Meta, Entity, FetchSql, FetchScript, Layout, MappingScript, CustomScripts, CreatorId, CreateStamp) \\n  SELECT @Id, @tenantId, @Identifier, @Name, @Meta, @Entity, @FetchSql, @FetchScript, @Layout, @MappingScript, @CustomScripts, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM statistic WHERE tenantId = @tenantId and Uuid = @Id) \\nEND'}]",
    "RemoveStatement": "delete from statistic where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": null,
    "BeforeSaveScript": null,
    "SaveScript": "",
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": null,
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Auswertungen',allowMultiselect:true,columns:[{type:'lookup',dataMember:'Entity',caption:'Objektdefinition',lookup:'entityLookup'},{type:'text',dataMember:'Identifier',caption:'Bezeichnung'},{type:'text',dataMember:'Name',caption:'Anzeigename'},{type:'bool',dataMember:'Meta',caption:'Meta'}],summaries:[{dataMember:'Identifier',summaryType:'count',groupSummary:true,totalSummary:true}]}]",
    "EditLayout": "[{identifier:'primary',colCount:1,colCountByScreen:{sm:1,lg:1},fullscreen:false,items:[{type:'lookup',options:{dataMember:'Entity',caption:'Objektdefinition',required:true,lookup:'entityLookup'}},{type:'text',options:{dataMember:'Identifier',caption:'Bezeichnung',required:true}},{type:'text',options:{dataMember:'Name',caption:'Anzeigename',required:true}},{type:'tabs',items:[{type:'tab',options:{caption:'Layout'},items:[{type:'json',options:{dataMember:'Layout'}}]},{type:'tab',options:{caption:'Abfrage'},items:[{type:'sql',options:{dataMember:'FetchSql'}},{type:'javascript',options:{dataMember:'FetchScript',caption:'Skript für Einträge der Abfrage',height:'100%'}}]},{type:'tab',options:{caption:'Skripting'},items:[{type:'javascript',options:{dataMember:'MappingScript',caption:'Skript für Datenaufbereitung'}},{type:'javascript',options:{dataMember:'EditableCustomScripts.argumentAxisCustomizeText',caption:'Anzeigetext für Argument-Achse festlegen'}}]}]}]}]",
    "CustomFunctions": "[{__KEY__:'ac46df43-34df-e57a-6174-a902dee1eda3',options:{format:'json'},id:'exportjson',type:'export',text:'Exportieren',icon:'bi bi-download',multi:true},{__KEY__:'5bd88df7-1288-d51b-517e-6ab7969b1c79',options:{format:'json'},id:'importjson',type:'import',text:'Importieren',icon:'bi bi-upload'}]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "66996b9b-63c3-456d-8dff-422f3609ea32",
        "Entity": "statistic",
        "Identifier": "meta.statistic.add",
        "DisplayName": "Anlegen",
        "Container": "statistic"
      },
      {
        "Id": "7ccb9648-e4bb-4e20-8686-80ee9e4e6c84",
        "Entity": "statistic",
        "Identifier": "meta.statistic.view",
        "DisplayName": "Anzeigen",
        "Container": "statistic"
      },
      {
        "Id": "83b9eca8-e26d-4d16-82c1-a2a64f214e02",
        "Entity": "statistic",
        "Identifier": "meta.statistic.delete",
        "DisplayName": "Löschen",
        "Container": "statistic"
      },
      {
        "Id": "29f33241-beab-4354-bdd3-dc1c0e19b57c",
        "Entity": "statistic",
        "Identifier": "meta.statistic.edit",
        "DisplayName": "Bearbeiten",
        "Container": "statistic"
      },
      {
        "Id": "1c773af1-8381-448b-b030-1537754a8cf7",
        "Entity": "statistic",
        "Identifier": "meta.statistic.exportjson",
        "DisplayName": "Exportieren",
        "Container": "statistic"
      },
      {
        "Id": "f98ecd7f-28ae-4e86-9fd1-fdf7e54ace7c",
        "Entity": "statistic",
        "Identifier": "meta.statistic.importjson",
        "DisplayName": "Importieren",
        "Container": "statistic"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": []
  },
  {
    "Id": "1a1a9781-549b-4fe8-9314-fe826645135c",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "subscription",
    "DisplayName": "Abonnement",
    "BaseUrl": "{document}subscription",
    "ItemMappingScript": null,
    "ItemReverseMappingScript": null,
    "ListQuery": "[{__KEY__:'1e3eb6e2-3375-5fa7-32de-984e22502c21',identifier:'primary',query:'SELECT Uuid as Id, Active, Attachment, AttachmentFileName, Body, Frequency, LastError, LastSendStamp, Mail, NotificationId, UserId \\nFROM subscription\\nWHERE TenantId = @tenantId\\nORDER BY Mail'},{__KEY__:'c772ca27-aa41-2b56-43ed-cd8e33559a7e',identifier:'exportjson',query:'SELECT Uuid as Id, Active, Attachment, AttachmentFileName, Body, Frequency, LastError, LastSendStamp, Mail, NotificationId, UserId FROM subscription WHERE TenantId=@tenantId and Uuid in (@id)'}]",
    "ByIdQuery": "[{identifier:'primary',query:'SELECT Uuid as Id, Active, Attachment, AttachmentFileName, Body, Frequency, LastError, LastSendStamp, Mail, NotificationId, UserId FROM subscription WHERE TenantId=@tenantId and Uuid = @id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"SELECT Id=NEWID(), Active=0, Attachment=0, AttachmentFileName=null, Body=null, Frequency=0, LastError=null, LastSendStamp=null, Mail=null, NotificationId=null, UserId=null\" }]",
    "ScalarValueQuery": null,
    "SaveStatement": "[{identifier:'primary',query:'UPDATE subscription SET Active=@Active, Attachment=@Attachment, AttachmentFileName=@AttachmentFileName, Body=@Body, Frequency=@Frequency, LastError=@LastError, LastSendStamp=@LastSendStamp, Mail=@Mail, NotificationId=@NotificationId, UserId=@UserId, LastChangerId = @claim_sub, LastChangeStamp = GETDATE() WHERE Uuid = @Id;  if @@ROWCOUNT = 0 BEGIN INSERT INTO subscription (Uuid, TenantId, Active, Attachment, AttachmentFileName, Body, Frequency, LastError, LastSendStamp, Mail, NotificationId, UserId, CreatorId, CreateStamp) SELECT @Id, @tenantId, @Active, @Attachment, @AttachmentFileName, @Body, @Frequency, @LastError, @LastSendStamp, @Mail, @NotificationId, @UserId, @claim_sub, GETDATE() WHERE NOT EXISTS (SELECT * FROM subscription WHERE tenantId = @tenantId and Uuid = @Id) END'}]",
    "RemoveStatement": "delete from subscription where TenantId=@tenantId and Uuid = @id;",
    "RemovePreliminaryCheckScript": null,
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": "",
    "BeforeSaveScript": null,
    "SaveScript": "",
    "Lookups": "[]",
    "Picklists": "[{identifier:'frequencyLookup',entity:'subscription',field:'frequency'}]",
    "CustomScripts": "{prepareCustomFunction:\"if (identifier === 'sendmail') {\\n    util.triggerSubscriptions(selection.map(s => s.Id), function() {\\n      messageCallback('Nachricht erfolgreich ausgelöst')\\n    }, function(err) {\\n      messageCallback('Fehler beim auslösen der Nachricht: ' + err);\\n    });    \\n}\",extendedRightsCheck:\"if (right === 'sendmail') {\\n    return userinfo.right.includes('meta.subscription.edit');\\n}\\n\\nreturn result;\"}",
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Abonnements',allowMultiselect:true,columns:[{type:'lookup',dataMember:'UserId',caption:'Benutzer',lookup:'userLookup'},{type:'text',dataMember:'Mail',caption:'Mail'},{type:'lookup',dataMember:'NotificationId',caption:'Benachrichtigung',lookup:'notificationLookup'},{type:'lookup',dataMember:'Frequency',caption:'Intervall',lookup:'frequencyLookup'},{type:'bool',dataMember:'Active',caption:'Aktiv'}],summaries:[{dataMember:'UserId',summaryType:'count',groupSummary:true,totalSummary:true}]}]",
    "EditLayout": "[{identifier:'primary',colCount:1,colCountByScreen:{sm:1,lg:1},fullscreen:false,items:[{type:'lookup',options:{dataMember:'UserId',caption:'Benutzer',required:true,lookup:'userLookup',valueExpr:'id',displayExpr:'name'}},{type:'mail',options:{dataMember:'Mail',caption:'Mail-Adresse',required:true}},{type:'lookup',options:{dataMember:'NotificationId',caption:'Benachrichtigung',required:true,lookup:'notificationLookup'}},{type:'pickvalue',options:{dataMember:'Frequency',caption:'Intervall',required:true,lookup:'frequencyLookup'}},{type:'bool',options:{dataMember:'Active',caption:'Aktiv'}},{type:'bool',options:{dataMember:'Attachement',caption:'Als Anhang senden'}},{type:'text',options:{dataMember:'AttachementFileName',caption:'Dateiname für Anhang'}},{type:'textarea',options:{dataMember:'Body',caption:'Mail-Inhalt'}}]}]",
    "CustomFunctions": "[{__KEY__:'707a4844-c822-7a9b-3ed1-8635d6dabeda',id:'sendmail',type:'edit',text:'Mail versenden',icon:'glyphicon glyphicon-envelope',options:{}},{__KEY__:'523a4514-d8c0-4d2e-cd2f-47c8a2cc4bcb',options:{format:'json'},id:'exportjson',type:'export',text:'Exportieren',icon:'bi bi-download',multi:true},{__KEY__:'2c7bdb6d-2a97-2626-66ef-a152a509b887',options:{format:'json'},id:'importjson',type:'import',text:'Importieren',icon:'bi bi-upload'}]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "ca7abb8e-4adf-4683-a20d-23e2a599b950",
        "Entity": "subscription",
        "Identifier": "meta.subscription.view",
        "DisplayName": "Anzeigen",
        "Container": "subscription"
      },
      {
        "Id": "9a57bd3d-b3c7-44b7-9626-7545bbc0f230",
        "Entity": "subscription",
        "Identifier": "meta.subscription.delete",
        "DisplayName": "Löschen",
        "Container": "subscription"
      },
      {
        "Id": "5067534c-b128-43da-a48f-caceb68e346c",
        "Entity": "subscription",
        "Identifier": "meta.subscription.add",
        "DisplayName": "Anlegen",
        "Container": "subscription"
      },
      {
        "Id": "80cd7d1c-9386-42d7-a127-dcfeb3e5b6d6",
        "Entity": "subscription",
        "Identifier": "meta.subscription.edit",
        "DisplayName": "Bearbeiten",
        "Container": "subscription"
      },
      {
        "Id": "d1c86993-e737-4d99-a62d-63d5672f12c7",
        "Entity": "subscription",
        "Identifier": "meta.subscription.importjson",
        "DisplayName": "Importieren",
        "Container": "subscription"
      },
      {
        "Id": "efcd0fe6-2280-4f75-877f-79fc29ab296f",
        "Entity": "subscription",
        "Identifier": "meta.subscription.exportjson",
        "DisplayName": "Exportieren",
        "Container": "subscription"
      }
    ],
    "Pickvalues": [
      {
        "Id": "dda01116-b09b-400b-981d-eb75e8ee8f29",
        "Entity": "subscription",
        "Field": "frequency",
        "Value": 0,
        "Text": "Manuell",
        "Sorting": 1
      },
      {
        "Id": "9dd2ed5c-f893-4ecd-ac25-e39730bf7116",
        "Entity": "subscription",
        "Field": "frequency",
        "Value": 1,
        "Text": "Wöchentlich",
        "Sorting": 2
      }
    ]
  },
  {
    "Id": "288eef7d-cb10-4787-85d3-a67c7ae6bd2f",
    "Meta": true,
    "GeneratedSchema": false,
    "NoIdentity": false,
    "Application": "meta",
    "Entity": "tenant",
    "DisplayName": "Mandant",
    "BaseUrl": "{meta}tenant",
    "ItemMappingScript": "item.EditableNavigation = item.Navigation ? util.parse(item.Navigation): {};\n\nitem.EditableTemplates = item.Templates ? util.parse(item.Templates): [];\n\nitem.EditableProviderModelDefinition = item.ProviderModelDefinition ? JSON.parse(item.ProviderModelDefinition) : {\n  databaseObjects: []\n};\n\n\nitem.EditableProviderModelDefinition.databaseObjects?.forEach(function (obj) {\n  obj.execute = false;\n});\n\nreturn item;",
    "ItemReverseMappingScript": "//item.Navigation = util.stringify(item.EditableNavigation);\n//item.EditableNavigation = null;\n\nif (item.EditableTemplates) {\n  item.Templates = util.stringify(item.EditableTemplates);\n  item.EditableTemplates = null;\n}\n\nif (item.EditableProviderModelDefinition) {\n  item.ProviderModelDefinition = JSON.stringify(item.EditableProviderModelDefinition);\n  item.EditableProviderModelDefinition = null;\n}\n\nreturn item;",
    "ListQuery": "[{__KEY__:'b8475d44-30cf-710e-4222-65ac11d94395',identifier:'primary',query:'select Uuid as Id, Name, Navigation, RightsCheckScript \\nfrom Tenant\\norder by Name'},{__KEY__:'d424e32c-4849-54e7-52bd-95e57512ac0e',identifier:'exportjson',query:'SELECT \\n  Uuid as Id, \\n  Name, \\n  Navigation, \\n  RightsCheckScript, \\n  ReportSchemaDefinition, \\n  ServerScriptDefinitions, \\n  Templates, \\n  ProviderModelDefinition \\nFROM tenant WHERE Uuid in (@id)'}]",
    "ByIdQuery": "[{identifier:'primary',query:'SELECT \\n  Uuid as Id, \\n  Name, \\n  Navigation, \\n  RightsCheckScript, \\n  ManagedDatabase,\\n  [Server], \\n  [Catalog], \\n  [Schema], \\n  [User], \\n  [Password], \\n  ReportSchemaDefinition, \\n  ServerScriptDefinitions, \\n  Templates,\\n  ProviderModelDefinition\\nFROM tenant WHERE Uuid = @id'}]",
    "NewQuery": "[{ identifier: 'primary', query: \"SELECT Id=NEWID(), Name=null, Navigation='{ items: [] }', RightsCheckScript=null, ManagedDatabase=1, [Server]=null, [Catalog]=null, [Schema]=null, [User]=null, [Password]=null, ReportSchemaDefinition=null, ServerScriptDefinitions=null, Templates=null, ProviderModelDefinition=null\" }]",
    "ScalarValueQuery": null,
    "SaveStatement": "[{identifier:'primary',query:'UPDATE tenant SET \\n  Name=@Name, \\n  Navigation=@Navigation, \\n  RightsCheckScript=@RightsCheckScript, \\n  ManagedDatabase=@ManagedDatabase,\\n  [Server]=@Server, \\n  [Catalog]=@Catalog, \\n  [Schema]=@Schema, \\n  [User]=@User, \\n  [Password]=@Password, \\n  ReportSchemaDefinition=@ReportSchemaDefinition, \\n  ServerScriptDefinitions=@ServerScriptDefinitions, \\n  Templates=@Templates,\\n  ProviderModelDefinition=@ProviderModelDefinition,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO tenant (Uuid, Name, Navigation, RightsCheckScript, ManagedDatabase, [Server], [Catalog], [Schema], [User], [Password], ReportSchemaDefinition, ServerScriptDefinitions, Templates, ProviderModelDefinition, CreatorId, CreateStamp) \\n    SELECT @Id, @Name, @Navigation, @RightsCheckScript, @ManagedDatabase, @Server, @Catalog, @Schema, @User, @Password, @ReportSchemaDefinition, @ServerScriptDefinitions, @Templates, @ProviderModelDefinition, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM tenant WHERE Uuid = @Id) \\nEND'},{__KEY__:'a6feaded-d9e6-c5c9-8a68-63a5c87edfff',identifier:'importjson',query:'UPDATE tenant SET \\n  Name=@Name, \\n  Navigation=@Navigation, \\n  RightsCheckScript=@RightsCheckScript, \\n  ReportSchemaDefinition=@ReportSchemaDefinition, \\n  ServerScriptDefinitions=@ServerScriptDefinitions, \\n  Templates=@Templates,\\n  ProviderModelDefinition=@ProviderModelDefinition,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE Uuid = @Id;  \\n\\nif @@ROWCOUNT = 0 BEGIN \\n  INSERT INTO tenant (Uuid, Name, Navigation, RightsCheckScript, ReportSchemaDefinition, ServerScriptDefinitions, Templates, ProviderModelDefinition, CreatorId, CreateStamp) \\n    SELECT @Id, @Name, @Navigation, @RightsCheckScript, @ReportSchemaDefinition, @ServerScriptDefinitions, @Templates, @ProviderModelDefinition, @claim_sub, GETDATE() \\n  WHERE NOT EXISTS (SELECT * FROM tenant WHERE Uuid = @Id) \\nEND'},{__KEY__:'c87cd889-a48d-d666-b278-703267f4a78f',identifier:'providermodel',query:'UPDATE tenant SET \\n  ProviderModelDefinition=@ProviderModelDefinition,\\n  LastChangerId = @claim_sub, \\n  LastChangeStamp = GETDATE() \\nWHERE Uuid = @Id;  '}]",
    "RemoveStatement": "delete from tenantdatabaseobject where TenantId=@id;\ndelete from characteristic where TenantId=@id;\ndelete from document where TenantId=@id;\ndelete from documentation where TenantId=@id;\ndelete from processingstate where TenantId=@id;\ndelete from characteristicassociation where TenantId=@id;\ndelete from entityright where TenantId=@id;\ndelete from entity where TenantId=@id;\ndelete from lookup where TenantId=@id;\ndelete from notification where TenantId=@id;\ndelete from page where TenantId=@id;\ndelete from statistic where TenantId=@id;\ndelete from subscription where TenantId=@id;\ndelete from tenant where Uuid=@id;",
    "RemovePreliminaryCheckScript": "dropTenant(params.id);\n\nreturn true;",
    "ListScript": null,
    "RemoveScript": null,
    "ByIdScript": "if ('exportjson' === identifier) {\n  addProperty('DbObjects', entityQueryList('meta', 'tenantdatabaseobject', 'exportjson', { tenantId: item.Id }));  \n}",
    "BeforeSaveScript": "",
    "SaveScript": "function mapDatabaseObjectType(intType) {\n  switch (intType) {\n    case 0:\n      return 'unknown';\n    case 1:\n      return 'table';\n    case 2:\n      return 'view';\n    case 3:\n      return 'function';\n    case 4:\n      return 'type';\n    case 5:\n      return 'statement';\n  }\n\n  return 'unknown';\n}\n\nif ('importjson' === identifier && item.DbObjects) {\n    var existingObjects = entityQueryList('meta', 'tenantdatabaseobject', 'exportjson', { tenantId: item.Id });\n\n    mergeAssociations(existingObjects, item.DbObjects, function(c) {\n        return c.Id;\n    }, function(r) {\n      \tentityRemove('meta', 'tenantdatabaseobject', { id: r.Id });\n    }, function(a) {\n        a.PersonId = item.Id;\n        entitySave('meta', 'tenantdatabaseobject', 'primary', a);\n    }, function(u) {\n      \tu.PersonId = item.Id;\n      \tentitySave('meta', 'tenantdatabaseobject', 'primary', u);\n    });\n} else if ('primary' === identifier) {\n    var existingObjects = entityQueryList('meta', 'tenantdatabaseobject', 'exportjson', { tenantId: item.Id });\n\n    var serializedProviderModel = JSON.stringify({\n      server: item.Server,\n      catalog: item.Catalog,\n      schema: item.Schema,\n      databaseObjects: existingObjects ? existingObjects.map(obj => ({\n        name: obj.Name,\n        type: mapDatabaseObjectType(obj.Type),\n        sql: obj.Sql,\n        executeOnSave: false\n      })) : []\n    });\n  \n    entitySave('meta', 'tenant', 'providermodel', { tenantId: item.Id, Id: item.Id, ProviderModelDefinition: serializedProviderModel });\n\n    initializeOrUpdateTenant(item.Id, serializedProviderModel);\n}\n\npurgeCache('tenant', item.Id);",
    "Lookups": "[]",
    "Picklists": "[]",
    "CustomScripts": "{initNewDetailItem:'if (dataMember === \"EditableProviderModelDefinition.databaseObjects\") {\\n  detailItem.Id = util.uuid();\\n}'}",
    "GridLayout": "[{identifier:'primary',editLayout:'primary',title:'Mandanten',allowMultiselect:true,columns:[{type:'text',dataMember:'Name',caption:'Name'}],summaries:[{dataMember:'Name',summaryType:'count',groupSummary:true,totalSummary:true}],details:''}]",
    "EditLayout": "[{identifier:'json',colCount:1,items:[{type:'json',options:{dataMember:'definition',height:'100%'}}]},{identifier:'primary',colCount:1,colCountByScreen:{sm:1,lg:1},fullscreen:false,items:[{type:'text',options:{dataMember:'Name',caption:'Name',required:true}},{type:'bool',options:{dataMember:'Seed',caption:'Mandant initialisieren'}},{type:'tabs',options:{},items:[{type:'tab',options:{caption:'Navigation/Rechte'},items:[{type:'detailtree',options:{dataMember:'EditableNavigation.items',itemoptions:{add:true,update:true,delete:true,showSource:true,columns:[{type:'staticlookup',dataMember:'type',caption:'Knotenart',items:[{Value:'group',Text:'Gruppe'},{Value:'section',Text:'Abschnitt'},{Value:'page',Text:'Seite'}],editable:true},{dataMember:'options.caption',caption:'Bezeichnung',editable:true},{dataMember:'options.url',caption:'Adresse',editable:true},{dataMember:'options.page',caption:'Seite',editable:true}]}}},{type:'json',options:{dataMember:'Navigation',caption:'Navigation'}},{type:'javascript',options:{dataMember:'RightsCheckScript',caption:'Skript für Rechteprüfung Seitenaufruf'}}]},{type:'tab',options:{caption:'Datenschema'},items:[{type:'text',options:{dataMember:'Provider',caption:'Anbieter'}},{type:'bool',options:{dataMember:'ManagedDatabase',caption:'Verwaltete Datenbank'}},{type:'text',options:{dataMember:'EditableProviderModelDefinition.server',caption:'Host'}},{type:'text',options:{dataMember:'EditableProviderModelDefinition.catalog',caption:'Datenbank'}},{type:'text',options:{dataMember:'EditableProviderModelDefinition.schema',caption:'Schema'}},{type:'detailgrid',options:{dataMember:'EditableProviderModelDefinition.databaseObjects',caption:'Datenbankobjekte',itemoptions:{add:true,update:true,delete:true,columns:[{type:'staticlookup',dataMember:'type',caption:'Art',editable:true,displayExpr:'text',valueExpr:'value',items:[{value:'unknown',text:'Unbekannt'},{value:'table',text:'Tabelle'},{value:'view',text:'Sicht'},{value:'function',text:'Funktion'},{value:'type',text:'Typ'},{value:'statement',text:'Anweisung'}]},{type:'text',dataMember:'name',caption:'Bezeichnung',editable:true},{type:'popup',dataMember:'sql',caption:'Definition',editable:true,popuplayout:'sql'},{type:'bool',dataMember:'execute',caption:'Ausführen',editable:true}]}}}]},{type:'tab',options:{caption:'Reporting'},items:[{type:'json',options:{dataMember:'ReportSchemaDefinition',caption:'Datenquellen-Definition'}}]},{type:'tab',options:{caption:'Script-Definitionen'},items:[{type:'javascript',options:{dataMember:'ServerScriptDefinitions',caption:'Server-Scriptfunktionen'}}]},{type:'tab',options:{caption:'Vorlagen'},items:[{type:'detailgrid',options:{dataMember:'EditableTemplates',caption:'Definitionen',itemoptions:{add:true,update:true,delete:true,showSource:true,columns:[{type:'text',dataMember:'identifier',caption:'Eindeutige Kennung',editable:true},{type:'popup',dataMember:'definition',caption:'Definition',editable:true,popuplayout:'json'}]}}}]}]}]},{__KEY__:'53216f08-50a5-226b-89de-d724b712c7e1',items:[{type:'sql',options:{dataMember:'sql',height:'100%'}}],identifier:'sql',colCount:1,fullscreen:false}]",
    "CustomFunctions": "[{__KEY__:'465c516e-475d-69ab-e4e1-e874b05daa42',options:{format:'json'},id:'exportjson',type:'export',text:'Exportieren',icon:'bi bi-download',multi:true},{__KEY__:'3302d27c-ccee-2cb6-58b2-9e26a68484bc',options:{format:'json'},id:'importjson',type:'import',text:'Importieren',icon:'bi bi-upload',multi:false}]",
    "StateColumn": null,
    "StateReasonColumn": null,
    "Templates": "[]",
    "StateAllowedScript": null,
    "Indices": "[]",
    "ProviderModelDefinition": null,
    "States": [],
    "Rights": [
      {
        "Id": "ecfc39c5-eb1b-49d6-aff8-3124d6860c1c",
        "Entity": "tenant",
        "Identifier": "meta.tenant.delete",
        "DisplayName": "Löschen",
        "Container": "tenant"
      },
      {
        "Id": "17c4a8a1-3d6c-4c80-93ec-865c7878b90b",
        "Entity": "tenant",
        "Identifier": "meta.tenant.add",
        "DisplayName": "Anlegen",
        "Container": "tenant"
      },
      {
        "Id": "b7aee4b3-441a-41a8-850d-c46bc921d720",
        "Entity": "tenant",
        "Identifier": "meta.tenant.view",
        "DisplayName": "Anzeigen",
        "Container": "tenant"
      },
      {
        "Id": "06a79f61-78ec-4dab-97f6-e2956535d0c5",
        "Entity": "tenant",
        "Identifier": "meta.tenant.edit",
        "DisplayName": "Bearbeiten",
        "Container": "tenant"
      },
      {
        "Id": "5d4a7b43-7d8c-40b1-86f8-edd4ac2dccd9",
        "Entity": "tenant",
        "Identifier": "meta.tenant.exportjson",
        "DisplayName": "Exportieren",
        "Container": "tenant"
      },
      {
        "Id": "480913bd-f62c-422f-861f-0fe06c9bffb3",
        "Entity": "tenant",
        "Identifier": "meta.tenant.importjson",
        "DisplayName": "Importieren",
        "Container": "tenant"
      }
    ],
    "Pickvalues": [],
    "CharacteristicAssociations": [],
    "RightsCheckScript": null
  }
]